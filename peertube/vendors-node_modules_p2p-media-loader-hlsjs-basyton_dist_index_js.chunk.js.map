{"version":3,"file":"vendors-node_modules_p2p-media-loader-hlsjs-basyton_dist_index_js.chunk.js?v=3640","mappings":"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","sources":["webpack://peertube-client/./node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://peertube-client/./node_modules/@videojs/vhs-utils/es/stream.js","webpack://peertube-client/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/bandwidth-approximator.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/http-media-manager.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/hybrid-loader.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/index.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/loader-interface.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/media-peer.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/p2p-media-manager.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/segments-memory-storage.js","webpack://peertube-client/./node_modules/p2p-media-loader-core-basyton/dist/stringly-typed-event-emitter.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/byte-range.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/engine.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/hlsjs-loader.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/index.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/segment-manager.js","webpack://peertube-client/./node_modules/sha.js/hash.js","webpack://peertube-client/./node_modules/sha.js/sha1.js","webpack://peertube-client/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://peertube-client/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://peertube-client/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://peertube-client/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","/*! @name m3u8-parser @version 4.7.1 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BandwidthApproximator = void 0;\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst debug = (0, debug_1.default)(\"p2pml:bandwidth-approximator\");\r\nconst SMOOTH_INTERVAL = 2 * 1000;\r\nconst MEASURE_INTERVAL = 40 * 1000;\r\nclass NumberWithTime {\r\n    constructor(value, timeStamp) {\r\n        this.value = value;\r\n        this.timeStamp = timeStamp;\r\n    }\r\n}\r\nclass BandwidthApproximator {\r\n    constructor() {\r\n        this.lastBytes = [];\r\n        this.currentBytesSum = 0;\r\n        this.lastBandwidth = [];\r\n        this.addBytes = (bytes, timeStamp) => {\r\n            debug(\"Add %d bytes.\", bytes);\r\n            this.lastBytes.push(new NumberWithTime(bytes, timeStamp));\r\n            this.currentBytesSum += bytes;\r\n            while (timeStamp - this.lastBytes[0].timeStamp > SMOOTH_INTERVAL) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                this.currentBytesSum -= this.lastBytes.shift().value;\r\n            }\r\n            const interval = Math.min(SMOOTH_INTERVAL, timeStamp);\r\n            this.lastBandwidth.push(new NumberWithTime(this.currentBytesSum / interval, timeStamp));\r\n        };\r\n        // in bytes per millisecond\r\n        this.getBandwidth = (timeStamp) => {\r\n            while (this.lastBandwidth.length !== 0 && timeStamp - this.lastBandwidth[0].timeStamp > MEASURE_INTERVAL) {\r\n                this.lastBandwidth.shift();\r\n            }\r\n            let maxBandwidth = 0;\r\n            for (const bandwidth of this.lastBandwidth) {\r\n                if (bandwidth.value > maxBandwidth) {\r\n                    maxBandwidth = bandwidth.value;\r\n                }\r\n            }\r\n            debug(\"Max bandwidth: %d.\", maxBandwidth);\r\n            return maxBandwidth;\r\n        };\r\n        this.getSmoothInterval = () => {\r\n            return SMOOTH_INTERVAL;\r\n        };\r\n        this.getMeasureInterval = () => {\r\n            return MEASURE_INTERVAL;\r\n        };\r\n    }\r\n}\r\nexports.BandwidthApproximator = BandwidthApproximator;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HttpMediaManager = void 0;\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst stringly_typed_event_emitter_1 = require(\"./stringly-typed-event-emitter\");\r\nclass FilteredEmitter extends stringly_typed_event_emitter_1.STEEmitter {\r\n}\r\nclass HttpMediaManager extends FilteredEmitter {\r\n    constructor(settings) {\r\n        super();\r\n        this.settings = settings;\r\n        this.fetchRequests = new Map();\r\n        this.failedSegments = new Map();\r\n        this.fetch = (...args) => fetch(...args);\r\n        this.debug = (0, debug_1.default)(\"p2pml:http-media-manager\");\r\n        this.download = (segment, downloadedPieces) => {\r\n            if (this.isDownloading(segment)) {\r\n                return;\r\n            }\r\n            this.cleanTimedOutFailedSegments();\r\n            this.emit(\"segment-start-load\", segment);\r\n            const segmentUrl = segment.priority <= this.settings.skipSegmentBuilderPriority\r\n                ? segment.url\r\n                : this.buildSegmentUrl(segment);\r\n            this.debug(\"http segment download\", segmentUrl);\r\n            segment.requestUrl = segmentUrl;\r\n            const fetchAbort = new AbortController();\r\n            const signal = fetchAbort.signal;\r\n            const headers = new Headers();\r\n            if (segment.range) {\r\n                headers.append(\"Range\", segment.range);\r\n                downloadedPieces = undefined; // TODO: process downloadedPieces for segments with range headers too\r\n            }\r\n            else if (downloadedPieces !== undefined && this.settings.httpUseRanges) {\r\n                let bytesDownloaded = 0;\r\n                for (const piece of downloadedPieces) {\r\n                    bytesDownloaded += piece.byteLength;\r\n                }\r\n                headers.append(\"Range\", `bytes=${bytesDownloaded}-`);\r\n                this.debug(\"continue download from\", bytesDownloaded);\r\n            }\r\n            else {\r\n                downloadedPieces = undefined;\r\n            }\r\n            const fetchRequest = this.fetch(segmentUrl, { headers, signal });\r\n            void this.setupFetchEvents(fetchRequest, segment, downloadedPieces)\r\n                .catch((err) => {\r\n                /**\r\n                 * Handling all fetch errors here\r\n                 */\r\n                if (err.name === \"AbortError\") {\r\n                    /**\r\n                     * This may happen on video seeking\r\n                     * or halted video playing. In most\r\n                     * cases it is normal. For more info\r\n                     * look AbortController...\r\n                     */\r\n                    this.debug(\"Segment loading was aborted by user\", segment);\r\n                    return;\r\n                }\r\n                if (err.message === \"network error\") {\r\n                    this.debug(\"Segment loading is unavailable. No internet\", segment);\r\n                    const netError = Error(\"NETWORK_ERROR\");\r\n                    this.segmentFailure(segment, netError, segment.url);\r\n                    return;\r\n                }\r\n                if (err.message === \"Failed to fetch\") {\r\n                    /**\r\n                     * This error might occur in next cases:\r\n                     *   - Network error\r\n                     *   - Response with erroneous CORS headers\r\n                     *   - Unsupported protocol, e.g. HTTPS\r\n                     *   - Wrong request method\r\n                     */\r\n                    this.debug(\"Segment fetch failed\", segment);\r\n                    const fetchError = Error(\"FETCH_FAILED\");\r\n                    this.segmentFailure(segment, fetchError, segment.url);\r\n                    return;\r\n                }\r\n            });\r\n            this.fetchRequests.set(segment.id, { fetchAbort, segment, initialPriority: segment.priority, segmentUrl });\r\n        };\r\n        this.updatePriority = (segment) => {\r\n            const request = this.fetchRequests.get(segment.id);\r\n            if (!request) {\r\n                throw new Error(\"Cannot update priority of not downloaded segment \" + segment.id);\r\n            }\r\n            // Segment is now in high priority\r\n            // If the segment URL changed, retry the request with the new URL\r\n            if (segment.priority <= this.settings.requiredSegmentsPriority &&\r\n                request.initialPriority > this.settings.requiredSegmentsPriority &&\r\n                request.segmentUrl !== this.buildSegmentUrl(segment)) {\r\n                this.debug(\"aborting http segment abort because the segment is now in a high priority\", segment.id);\r\n                this.abort(segment);\r\n                this.download(segment);\r\n            }\r\n        };\r\n        this.abort = (segment) => {\r\n            const request = this.fetchRequests.get(segment.id);\r\n            if (request) {\r\n                request.fetchAbort.abort();\r\n                this.fetchRequests.delete(segment.id);\r\n                this.debug(\"http segment abort\", segment.id);\r\n            }\r\n        };\r\n        this.isDownloading = (segment) => {\r\n            return this.fetchRequests.has(segment.id);\r\n        };\r\n        this.isFailed = (segment) => {\r\n            const time = this.failedSegments.get(segment.id);\r\n            return time !== undefined && time > this.now();\r\n        };\r\n        this.getActiveDownloads = () => {\r\n            return this.fetchRequests;\r\n        };\r\n        this.getActiveDownloadsCount = () => {\r\n            return this.fetchRequests.size;\r\n        };\r\n        this.destroy = () => {\r\n            this.fetchRequests.forEach((request) => request.fetchAbort.abort());\r\n            this.fetchRequests.clear();\r\n        };\r\n        this.setupFetchEvents = async (fetch, segment, downloadedPieces) => {\r\n            const fetchResponse = await fetch;\r\n            const dataReader = fetchResponse.body.getReader();\r\n            const contentLengthStr = fetchResponse.headers.get(\"Content-Length\");\r\n            const contentLength = Number.parseFloat(contentLengthStr);\r\n            const dataBytes = new Uint8Array(contentLength);\r\n            let nextChunkPos = 0;\r\n            if (Array.isArray(downloadedPieces) && fetchResponse.status === 206) {\r\n                for (const piece of downloadedPieces) {\r\n                    const pieceBytes = new Uint8Array(piece);\r\n                    dataBytes.set(pieceBytes, nextChunkPos);\r\n                    nextChunkPos = piece.byteLength;\r\n                }\r\n            }\r\n            let read;\r\n            while (!(read = await dataReader.read()).done) {\r\n                const chunkBytes = read.value;\r\n                dataBytes.set(chunkBytes, nextChunkPos);\r\n                nextChunkPos += chunkBytes.length;\r\n                /** Events emitters */\r\n                this.emit(\"bytes-downloaded\", segment, chunkBytes.length);\r\n                if (contentLength) {\r\n                    this.emit(\"segment-size\", segment, contentLength);\r\n                }\r\n            }\r\n            if (fetchResponse.status < 200 || fetchResponse.status >= 300) {\r\n                const err = Error(`Segment failure with HTTP code ${fetchResponse.status}`);\r\n                this.segmentFailure(segment, err, fetchResponse.url);\r\n                return;\r\n            }\r\n            await this.segmentDownloadFinished(segment, dataBytes.buffer, fetchResponse);\r\n        };\r\n        this.segmentDownloadFinished = async (segment, data, fetchResponse) => {\r\n            segment.responseUrl = fetchResponse.url;\r\n            if (this.settings.segmentValidator) {\r\n                try {\r\n                    await this.settings.segmentValidator(Object.assign(Object.assign({}, segment), { data: data }), \"http\");\r\n                }\r\n                catch (error) {\r\n                    this.debug(\"segment validator failed\", error);\r\n                    this.segmentFailure(segment, error, fetchResponse.url);\r\n                    return;\r\n                }\r\n            }\r\n            this.fetchRequests.delete(segment.id);\r\n            this.emit(\"segment-loaded\", segment, data);\r\n        };\r\n        this.segmentFailure = (segment, error, responseUrl) => {\r\n            segment.responseUrl = responseUrl;\r\n            this.fetchRequests.delete(segment.id);\r\n            this.failedSegments.set(segment.id, this.now() + this.settings.httpFailedSegmentTimeout);\r\n            this.emit(\"segment-error\", segment, error);\r\n        };\r\n        this.cleanTimedOutFailedSegments = () => {\r\n            const now = this.now();\r\n            const candidates = [];\r\n            this.failedSegments.forEach((time, id) => {\r\n                if (time < now) {\r\n                    candidates.push(id);\r\n                }\r\n            });\r\n            candidates.forEach((id) => this.failedSegments.delete(id));\r\n        };\r\n        this.now = () => performance.now();\r\n        if (settings.localTransport) {\r\n            this.fetch = settings.localTransport;\r\n        }\r\n    }\r\n    buildSegmentUrl(segment) {\r\n        if (this.settings.segmentUrlBuilder) {\r\n            return this.settings.segmentUrlBuilder(segment);\r\n        }\r\n        return segment.url;\r\n    }\r\n}\r\nexports.HttpMediaManager = HttpMediaManager;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HybridLoader = void 0;\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst events_1 = require(\"events\");\r\nconst simple_peer_1 = __importDefault(require(\"simple-peer\"));\r\nconst loader_interface_1 = require(\"./loader-interface\");\r\nconst http_media_manager_1 = require(\"./http-media-manager\");\r\nconst p2p_media_manager_1 = require(\"./p2p-media-manager\");\r\nconst media_peer_1 = require(\"./media-peer\");\r\nconst bandwidth_approximator_1 = require(\"./bandwidth-approximator\");\r\nconst segments_memory_storage_1 = require(\"./segments-memory-storage\");\r\nconst defaultSettings = {\r\n    cachedSegmentExpiration: 5 * 60 * 1000,\r\n    cachedSegmentsCount: 30,\r\n    useP2P: true,\r\n    consumeOnly: false,\r\n    requiredSegmentsPriority: 1,\r\n    skipSegmentBuilderPriority: 1,\r\n    simultaneousHttpDownloads: 2,\r\n    httpDownloadProbability: 0.1,\r\n    httpDownloadProbabilityInterval: 1000,\r\n    httpDownloadProbabilitySkipIfNoPeers: false,\r\n    httpFailedSegmentTimeout: 10000,\r\n    httpDownloadMaxPriority: 20,\r\n    httpDownloadInitialTimeout: 0,\r\n    httpDownloadInitialTimeoutPerSegment: 4000,\r\n    httpUseRanges: false,\r\n    simultaneousP2PDownloads: 3,\r\n    p2pDownloadMaxPriority: 20,\r\n    p2pSegmentDownloadTimeout: 60000,\r\n    webRtcMaxMessageSize: 64 * 1024 - 1,\r\n    trackerAnnounce: [\"wss://tracker.novage.com.ua\", \"wss://tracker.openwebtorrent.com\"],\r\n    peerRequestsPerAnnounce: 10,\r\n    rtcConfig: simple_peer_1.default.config,\r\n};\r\nclass HybridLoader extends events_1.EventEmitter {\r\n    constructor(settings = {}) {\r\n        super();\r\n        this.debug = (0, debug_1.default)(\"p2pml:hybrid-loader\");\r\n        this.debugSegments = (0, debug_1.default)(\"p2pml:hybrid-loader-segments\");\r\n        this.segmentsQueue = [];\r\n        this.bandwidthApproximator = new bandwidth_approximator_1.BandwidthApproximator();\r\n        this.httpDownloadInitialTimeoutTimestamp = -Infinity;\r\n        this.createHttpManager = () => {\r\n            return new http_media_manager_1.HttpMediaManager(this.settings);\r\n        };\r\n        this.createP2PManager = () => {\r\n            return new p2p_media_manager_1.P2PMediaManager(this.segmentsStorage, this.settings);\r\n        };\r\n        this.load = async (segments, streamSwarmId) => {\r\n            this.initRandomDownloadIntervalIfNeeded();\r\n            if (segments.length > 0) {\r\n                this.masterSwarmId = segments[0].masterSwarmId;\r\n            }\r\n            if (this.masterSwarmId !== undefined) {\r\n                this.p2pManager.setStreamSwarmId(streamSwarmId, this.masterSwarmId);\r\n            }\r\n            this.debug(\"load segments\");\r\n            // stop all http requests and p2p downloads for segments that are not in the new load\r\n            let updateSegmentsMap = this.abortUnknownSegments(segments);\r\n            if (this.debug.enabled) {\r\n                for (const segment of segments) {\r\n                    if (!this.segmentsQueue.find((f) => f.id === segment.id)) {\r\n                        this.debug(\"add segment\", segment.id);\r\n                    }\r\n                }\r\n            }\r\n            this.segmentsQueue = segments;\r\n            if (this.masterSwarmId === undefined) {\r\n                return;\r\n            }\r\n            let storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n            updateSegmentsMap = this.processSegmentsQueue(storageSegments) || updateSegmentsMap;\r\n            if (await this.cleanSegmentsStorage()) {\r\n                storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n                updateSegmentsMap = true;\r\n            }\r\n            if (updateSegmentsMap && !this.settings.consumeOnly) {\r\n                this.p2pManager.sendSegmentsMapToAll(this.createSegmentsMap(storageSegments));\r\n            }\r\n        };\r\n        this.getSegment = async (id) => {\r\n            return this.masterSwarmId === undefined ? undefined : this.segmentsStorage.getSegment(id, this.masterSwarmId);\r\n        };\r\n        this.getSettings = () => {\r\n            return this.settings;\r\n        };\r\n        this.getDetails = () => {\r\n            return {\r\n                peerId: this.p2pManager.getPeerId(),\r\n            };\r\n        };\r\n        this.getBandwidthEstimate = () => {\r\n            return this.bandwidthApproximator.getBandwidth(this.now());\r\n        };\r\n        this.destroy = async () => {\r\n            if (this.httpRandomDownloadInterval !== undefined) {\r\n                clearInterval(this.httpRandomDownloadInterval);\r\n                this.httpRandomDownloadInterval = undefined;\r\n            }\r\n            this.httpDownloadInitialTimeoutTimestamp = -Infinity;\r\n            this.segmentsQueue = [];\r\n            this.httpManager.destroy();\r\n            this.p2pManager.destroy();\r\n            this.masterSwarmId = undefined;\r\n            await this.segmentsStorage.destroy();\r\n        };\r\n        this.processInitialSegmentTimeout = async () => {\r\n            if (this.httpRandomDownloadInterval === undefined) {\r\n                return; // Instance destroyed\r\n            }\r\n            if (this.masterSwarmId !== undefined) {\r\n                const storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n                if (this.processSegmentsQueue(storageSegments) && !this.settings.consumeOnly) {\r\n                    this.p2pManager.sendSegmentsMapToAll(this.createSegmentsMap(storageSegments));\r\n                }\r\n            }\r\n            if (this.httpDownloadInitialTimeoutTimestamp !== -Infinity) {\r\n                // Set one more timeout for a next segment\r\n                setTimeout(this.processInitialSegmentTimeout, this.settings.httpDownloadInitialTimeoutPerSegment);\r\n            }\r\n        };\r\n        this.processSegmentsQueue = (storageSegments) => {\r\n            const currentPriority = this.segmentsQueue.length > 0 ? this.segmentsQueue[0].priority : 0;\r\n            this.debugSegments(`process segments queue. priority: ${currentPriority}, queue length: ${this.segmentsQueue.length}`);\r\n            if (this.masterSwarmId === undefined || this.segmentsQueue.length === 0) {\r\n                return false;\r\n            }\r\n            let updateSegmentsMap = false;\r\n            let segmentsMap;\r\n            let httpAllowed = true;\r\n            if (this.httpDownloadInitialTimeoutTimestamp !== -Infinity) {\r\n                let firstNotDownloadePriority;\r\n                for (const segment of this.segmentsQueue) {\r\n                    if (!storageSegments.has(segment.id)) {\r\n                        firstNotDownloadePriority = segment.priority;\r\n                        break;\r\n                    }\r\n                }\r\n                const httpTimeout = this.now() - this.httpDownloadInitialTimeoutTimestamp;\r\n                httpAllowed =\r\n                    httpTimeout >= this.settings.httpDownloadInitialTimeout ||\r\n                        (firstNotDownloadePriority !== undefined &&\r\n                            httpTimeout > this.settings.httpDownloadInitialTimeoutPerSegment &&\r\n                            firstNotDownloadePriority <= 0);\r\n                if (httpAllowed) {\r\n                    this.debugSegments(\"cancel initial HTTP download timeout - timed out\");\r\n                    this.httpDownloadInitialTimeoutTimestamp = -Infinity;\r\n                }\r\n            }\r\n            let scheduleNewProcessQueue = false;\r\n            for (let index = 0; index < this.segmentsQueue.length; index++) {\r\n                const segment = this.segmentsQueue[index];\r\n                if (storageSegments.has(segment.id)) {\r\n                    continue;\r\n                }\r\n                // Segment priority changed, notify http manager\r\n                if (this.httpManager.isDownloading(segment)) {\r\n                    this.httpManager.updatePriority(segment);\r\n                    continue;\r\n                }\r\n                const tryHTTP = httpAllowed && segment.priority <= this.settings.requiredSegmentsPriority;\r\n                if (tryHTTP && !this.httpManager.isFailed(segment)) {\r\n                    // Download required segments over HTTP\r\n                    if (this.httpManager.getActiveDownloadsCount() >= this.settings.simultaneousHttpDownloads) {\r\n                        // Not enough HTTP download resources. Abort one of the HTTP downloads.\r\n                        for (let i = this.segmentsQueue.length - 1; i > index; i--) {\r\n                            const segmentToAbort = this.segmentsQueue[i];\r\n                            if (this.httpManager.isDownloading(segmentToAbort)) {\r\n                                this.debugSegments(\"cancel HTTP download\", segmentToAbort.priority, segmentToAbort.id);\r\n                                this.httpManager.abort(segmentToAbort);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.httpManager.getActiveDownloadsCount() < this.settings.simultaneousHttpDownloads) {\r\n                        // Abort P2P download of the required segment if any and force HTTP download\r\n                        const downloadedPieces = this.p2pManager.abort(segment);\r\n                        this.httpManager.download(segment, downloadedPieces);\r\n                        this.debugSegments(\"HTTP download (priority)\", segment.priority, segment.id);\r\n                        updateSegmentsMap = true;\r\n                        continue;\r\n                    }\r\n                }\r\n                // We wanted to download a failed segment through HTTP, but we could not because of the timeout.\r\n                // Then we need to schedule another processing queue task\r\n                if (tryHTTP && this.httpManager.isFailed(segment)) {\r\n                    scheduleNewProcessQueue = true;\r\n                }\r\n                if (this.p2pManager.isDownloading(segment)) {\r\n                    continue;\r\n                }\r\n                if (segment.priority <= this.settings.requiredSegmentsPriority) {\r\n                    // Download required segments over P2P\r\n                    segmentsMap = segmentsMap ? segmentsMap : this.p2pManager.getOverallSegmentsMap();\r\n                    if (segmentsMap.get(segment.id) !== media_peer_1.MediaPeerSegmentStatus.Loaded) {\r\n                        continue;\r\n                    }\r\n                    if (this.p2pManager.getActiveDownloadsCount() >= this.settings.simultaneousP2PDownloads) {\r\n                        // Not enough P2P download resources. Abort one of the P2P downloads.\r\n                        for (let i = this.segmentsQueue.length - 1; i > index; i--) {\r\n                            const segmentToAbort = this.segmentsQueue[i];\r\n                            if (this.p2pManager.isDownloading(segmentToAbort)) {\r\n                                this.debugSegments(\"cancel P2P download\", segmentToAbort.priority, segmentToAbort.id);\r\n                                this.p2pManager.abort(segmentToAbort);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.p2pManager.getActiveDownloadsCount() < this.settings.simultaneousP2PDownloads) {\r\n                        if (this.p2pManager.download(segment)) {\r\n                            this.debugSegments(\"P2P download (priority)\", segment.priority, segment.id);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    continue;\r\n                }\r\n                if (this.p2pManager.getActiveDownloadsCount() < this.settings.simultaneousP2PDownloads &&\r\n                    segment.priority <= this.settings.p2pDownloadMaxPriority) {\r\n                    if (this.p2pManager.download(segment)) {\r\n                        this.debugSegments(\"P2P download\", segment.priority, segment.id);\r\n                    }\r\n                }\r\n            }\r\n            if (scheduleNewProcessQueue) {\r\n                setTimeout(async () => {\r\n                    if (this.masterSwarmId === undefined)\r\n                        return;\r\n                    const storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n                    this.processSegmentsQueue(storageSegments);\r\n                }, this.settings.httpFailedSegmentTimeout);\r\n            }\r\n            return updateSegmentsMap;\r\n        };\r\n        this.downloadRandomSegmentOverHttp = async () => {\r\n            if (this.masterSwarmId === undefined ||\r\n                this.httpRandomDownloadInterval === undefined ||\r\n                this.httpDownloadInitialTimeoutTimestamp !== -Infinity ||\r\n                this.httpManager.getActiveDownloadsCount() >= this.settings.simultaneousHttpDownloads ||\r\n                (this.settings.httpDownloadProbabilitySkipIfNoPeers && this.p2pManager.getPeers().size === 0) ||\r\n                this.settings.consumeOnly) {\r\n                return;\r\n            }\r\n            const storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n            const segmentsMap = this.p2pManager.getOverallSegmentsMap();\r\n            const pendingQueue = this.segmentsQueue.filter((s) => !this.p2pManager.isDownloading(s) &&\r\n                !this.httpManager.isDownloading(s) &&\r\n                !segmentsMap.has(s.id) &&\r\n                !this.httpManager.isFailed(s) &&\r\n                s.priority <= this.settings.httpDownloadMaxPriority &&\r\n                !storageSegments.has(s.id));\r\n            if (pendingQueue.length === 0) {\r\n                return;\r\n            }\r\n            if (Math.random() > this.settings.httpDownloadProbability * pendingQueue.length) {\r\n                return;\r\n            }\r\n            const segment = pendingQueue[Math.floor(Math.random() * pendingQueue.length)];\r\n            this.debugSegments(\"HTTP download (random)\", segment.priority, segment.id);\r\n            this.httpManager.download(segment);\r\n            this.p2pManager.sendSegmentsMapToAll(this.createSegmentsMap(storageSegments));\r\n        };\r\n        this.onSegmentStartLoad = (method, segment) => {\r\n            this.emit(loader_interface_1.Events.SegmentStartLoad, method, segment);\r\n        };\r\n        this.onPieceBytesDownloaded = (method, segment, bytes, peerId) => {\r\n            this.bandwidthApproximator.addBytes(bytes, this.now());\r\n            this.emit(loader_interface_1.Events.PieceBytesDownloaded, method, segment, bytes, peerId);\r\n        };\r\n        this.onPieceBytesUploaded = (method, segment, bytes, peerId) => {\r\n            this.emit(loader_interface_1.Events.PieceBytesUploaded, method, segment, bytes, peerId);\r\n        };\r\n        this.onSegmentLoaded = async (segment, data, peerId) => {\r\n            this.debugSegments(\"segment loaded\", segment.id, segment.id);\r\n            if (this.masterSwarmId === undefined) {\r\n                return;\r\n            }\r\n            segment.data = data;\r\n            segment.downloadBandwidth = this.bandwidthApproximator.getBandwidth(this.now());\r\n            await this.segmentsStorage.storeSegment(segment);\r\n            this.emit(loader_interface_1.Events.SegmentLoaded, segment, peerId);\r\n            const storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n            this.processSegmentsQueue(storageSegments);\r\n            if (!this.settings.consumeOnly) {\r\n                this.p2pManager.sendSegmentsMapToAll(this.createSegmentsMap(storageSegments));\r\n            }\r\n        };\r\n        this.onSegmentError = async (segment, details, peerId) => {\r\n            this.debugSegments(\"segment error\", segment.id, segment.id, peerId, details);\r\n            this.emit(loader_interface_1.Events.SegmentError, segment, details, peerId);\r\n            if (this.masterSwarmId !== undefined) {\r\n                const storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n                if (this.processSegmentsQueue(storageSegments) && !this.settings.consumeOnly) {\r\n                    this.p2pManager.sendSegmentsMapToAll(this.createSegmentsMap(storageSegments));\r\n                }\r\n            }\r\n        };\r\n        this.onSegmentSize = async (segment, size) => {\r\n            this.debugSegments(\"segment size\", segment.id, size);\r\n            this.emit(loader_interface_1.Events.SegmentSize, segment, size);\r\n        };\r\n        this.getStreamSwarmId = (segment) => {\r\n            return segment.streamId === undefined ? segment.masterSwarmId : `${segment.masterSwarmId}+${segment.streamId}`;\r\n        };\r\n        this.createSegmentsMap = (storageSegments) => {\r\n            const segmentsMap = {};\r\n            const addSegmentToMap = (segment, status) => {\r\n                const streamSwarmId = this.getStreamSwarmId(segment);\r\n                const segmentId = segment.sequence;\r\n                let segmentsIdsAndStatuses = segmentsMap[streamSwarmId];\r\n                if (segmentsIdsAndStatuses === undefined) {\r\n                    segmentsIdsAndStatuses = [\"\", []];\r\n                    segmentsMap[streamSwarmId] = segmentsIdsAndStatuses;\r\n                }\r\n                const segmentsStatuses = segmentsIdsAndStatuses[1];\r\n                segmentsIdsAndStatuses[0] += segmentsStatuses.length === 0 ? segmentId : `|${segmentId}`;\r\n                segmentsStatuses.push(status);\r\n            };\r\n            for (const storageSegment of storageSegments.values()) {\r\n                addSegmentToMap(storageSegment.segment, media_peer_1.MediaPeerSegmentStatus.Loaded);\r\n            }\r\n            for (const download of this.httpManager.getActiveDownloads().values()) {\r\n                addSegmentToMap(download.segment, media_peer_1.MediaPeerSegmentStatus.LoadingByHttp);\r\n            }\r\n            return segmentsMap;\r\n        };\r\n        this.onPeerConnect = async (peer) => {\r\n            this.emit(loader_interface_1.Events.PeerConnect, peer);\r\n            if (!this.settings.consumeOnly && this.masterSwarmId !== undefined) {\r\n                this.p2pManager.sendSegmentsMap(peer.id, this.createSegmentsMap(await this.segmentsStorage.getSegmentsMap(this.masterSwarmId)));\r\n            }\r\n        };\r\n        this.onPeerClose = (peerId) => {\r\n            this.emit(loader_interface_1.Events.PeerClose, peerId);\r\n        };\r\n        this.onTrackerUpdate = async (data) => {\r\n            if (this.httpDownloadInitialTimeoutTimestamp !== -Infinity &&\r\n                data.incomplete !== undefined &&\r\n                data.incomplete <= 1) {\r\n                this.debugSegments(\"cancel initial HTTP download timeout - no peers\");\r\n                this.httpDownloadInitialTimeoutTimestamp = -Infinity;\r\n                if (this.masterSwarmId !== undefined) {\r\n                    const storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n                    if (this.processSegmentsQueue(storageSegments) && !this.settings.consumeOnly) {\r\n                        this.p2pManager.sendSegmentsMapToAll(this.createSegmentsMap(storageSegments));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.cleanSegmentsStorage = async () => {\r\n            if (this.masterSwarmId === undefined) {\r\n                return false;\r\n            }\r\n            return this.segmentsStorage.clean(this.masterSwarmId, (id) => this.segmentsQueue.find((queueSegment) => queueSegment.id === id) !== undefined);\r\n        };\r\n        this.now = () => {\r\n            return performance.now();\r\n        };\r\n        this.initRandomDownloadIntervalIfNeeded = () => {\r\n            if (this.httpRandomDownloadInterval !== undefined)\r\n                return;\r\n            // Do once on first call\r\n            this.httpRandomDownloadInterval = setInterval(this.downloadRandomSegmentOverHttp, this.settings.httpDownloadProbabilityInterval);\r\n            if (this.settings.httpDownloadInitialTimeout > 0 &&\r\n                this.settings.httpDownloadInitialTimeoutPerSegment > 0) {\r\n                // Initialize initial HTTP download timeout (i.e. download initial segments over P2P)\r\n                this.debugSegments(\"enable initial HTTP download timeout\", this.settings.httpDownloadInitialTimeout, \"per segment\", this.settings.httpDownloadInitialTimeoutPerSegment);\r\n                this.httpDownloadInitialTimeoutTimestamp = this.now();\r\n                setTimeout(this.processInitialSegmentTimeout, this.settings.httpDownloadInitialTimeoutPerSegment + 100);\r\n            }\r\n        };\r\n        this.abortUnknownSegments = (segments) => {\r\n            let updateSegmentsMap = false;\r\n            for (const segment of this.segmentsQueue) {\r\n                if (!segments.find((f) => f.id === segment.id)) {\r\n                    this.debug(\"remove segment\", segment.id);\r\n                    if (this.httpManager.isDownloading(segment)) {\r\n                        updateSegmentsMap = true;\r\n                        this.httpManager.abort(segment);\r\n                    }\r\n                    else {\r\n                        this.p2pManager.abort(segment);\r\n                    }\r\n                    this.emit(loader_interface_1.Events.SegmentAbort, segment);\r\n                }\r\n            }\r\n            return updateSegmentsMap;\r\n        };\r\n        this.settings = Object.assign(Object.assign({}, defaultSettings), settings);\r\n        const { bufferedSegmentsCount } = settings;\r\n        if (typeof bufferedSegmentsCount === \"number\") {\r\n            if (settings.p2pDownloadMaxPriority === undefined) {\r\n                this.settings.p2pDownloadMaxPriority = bufferedSegmentsCount;\r\n            }\r\n            if (settings.httpDownloadMaxPriority === undefined) {\r\n                this.settings.p2pDownloadMaxPriority = bufferedSegmentsCount;\r\n            }\r\n        }\r\n        this.segmentsStorage =\r\n            this.settings.segmentsStorage === undefined\r\n                ? new segments_memory_storage_1.SegmentsMemoryStorage(this.settings)\r\n                : this.settings.segmentsStorage;\r\n        this.debug(\"loader settings\", this.settings);\r\n        this.httpManager = this.createHttpManager();\r\n        this.httpManager.on(\"segment-start-load\", (segment) => this.onSegmentStartLoad(\"http\", segment));\r\n        this.httpManager.on(\"segment-loaded\", this.onSegmentLoaded);\r\n        this.httpManager.on(\"segment-error\", this.onSegmentError);\r\n        this.httpManager.on(\"segment-size\", this.onSegmentSize);\r\n        this.httpManager.on(\"bytes-downloaded\", (segment, bytes) => {\r\n            this.onPieceBytesDownloaded(\"http\", segment, bytes);\r\n        });\r\n        this.p2pManager = this.createP2PManager();\r\n        this.p2pManager.on(\"segment-start-load\", (segment) => this.onSegmentStartLoad(\"p2p\", segment));\r\n        this.p2pManager.on(\"segment-loaded\", this.onSegmentLoaded);\r\n        this.p2pManager.on(\"segment-error\", this.onSegmentError);\r\n        this.p2pManager.on(\"segment-size\", this.onSegmentSize);\r\n        this.p2pManager.on(\"peer-data-updated\", async () => {\r\n            if (this.masterSwarmId === undefined) {\r\n                return;\r\n            }\r\n            const storageSegments = await this.segmentsStorage.getSegmentsMap(this.masterSwarmId);\r\n            if (this.processSegmentsQueue(storageSegments) && !this.settings.consumeOnly) {\r\n                this.p2pManager.sendSegmentsMapToAll(this.createSegmentsMap(storageSegments));\r\n            }\r\n        });\r\n        this.p2pManager.on(\"bytes-downloaded\", (segment, bytes, peerId) => this.onPieceBytesDownloaded(\"p2p\", segment, bytes, peerId));\r\n        this.p2pManager.on(\"bytes-uploaded\", (segment, bytes, peerId) => this.onPieceBytesUploaded(\"p2p\", segment, bytes, peerId));\r\n        this.p2pManager.on(\"peer-connected\", this.onPeerConnect);\r\n        this.p2pManager.on(\"peer-closed\", this.onPeerClose);\r\n        this.p2pManager.on(\"tracker-update\", this.onTrackerUpdate);\r\n    }\r\n}\r\nexports.HybridLoader = HybridLoader;\r\nHybridLoader.isSupported = () => {\r\n    return window.RTCPeerConnection.prototype.createDataChannel !== undefined;\r\n};\r\n","\"use strict\";\r\n/**\r\n * @license Apache-2.0\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.version = void 0;\r\nexports.version = \"0.6.2\";\r\n__exportStar(require(\"./loader-interface\"), exports);\r\n__exportStar(require(\"./hybrid-loader\"), exports);\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Events = void 0;\r\nvar Events;\r\n(function (Events) {\r\n    /**\r\n     * Emitted when segment has been downloaded.\r\n     * Args: segment\r\n     */\r\n    Events[\"SegmentLoaded\"] = \"segment_loaded\";\r\n    /**\r\n     * Emitted when an error occurred while loading the segment.\r\n     * Args: segment, error\r\n     */\r\n    Events[\"SegmentError\"] = \"segment_error\";\r\n    /**\r\n     * Emitter when we the segment size is known\r\n     * Args: segment, size\r\n     */\r\n    Events[\"SegmentSize\"] = \"segment_size\";\r\n    /**\r\n     * Emitted for each segment that does not hit into a new segments queue when the load() method is called.\r\n     * Args: segment\r\n     */\r\n    Events[\"SegmentAbort\"] = \"segment_abort\";\r\n    /**\r\n     * Emitted when the loader started to load a segment\r\n     * Args: method, segment\r\n     */\r\n    Events[\"SegmentStartLoad\"] = \"segment_start_load\";\r\n    /**\r\n     * Emitted when a peer is connected.\r\n     * Args: peer\r\n     */\r\n    Events[\"PeerConnect\"] = \"peer_connect\";\r\n    /**\r\n     * Emitted when a peer is disconnected.\r\n     * Args: peerId\r\n     */\r\n    Events[\"PeerClose\"] = \"peer_close\";\r\n    /**\r\n     * Emitted when a segment piece has been downloaded.\r\n     * Args: method (can be \"http\" or \"p2p\" only), bytes\r\n     */\r\n    Events[\"PieceBytesDownloaded\"] = \"piece_bytes_downloaded\";\r\n    /**\r\n     * Emitted when a segment piece has been uploaded.\r\n     * Args: method (can be \"p2p\" only), bytes\r\n     */\r\n    Events[\"PieceBytesUploaded\"] = \"piece_bytes_uploaded\";\r\n})(Events = exports.Events || (exports.Events = {}));\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MediaPeer = exports.MediaPeerSegmentStatus = void 0;\r\n/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst buffer_1 = require(\"buffer\");\r\nconst stringly_typed_event_emitter_1 = require(\"./stringly-typed-event-emitter\");\r\nvar MediaPeerCommands;\r\n(function (MediaPeerCommands) {\r\n    MediaPeerCommands[MediaPeerCommands[\"SegmentData\"] = 0] = \"SegmentData\";\r\n    MediaPeerCommands[MediaPeerCommands[\"SegmentAbsent\"] = 1] = \"SegmentAbsent\";\r\n    MediaPeerCommands[MediaPeerCommands[\"SegmentsMap\"] = 2] = \"SegmentsMap\";\r\n    MediaPeerCommands[MediaPeerCommands[\"SegmentRequest\"] = 3] = \"SegmentRequest\";\r\n    MediaPeerCommands[MediaPeerCommands[\"CancelSegmentRequest\"] = 4] = \"CancelSegmentRequest\";\r\n})(MediaPeerCommands || (MediaPeerCommands = {}));\r\nvar MediaPeerSegmentStatus;\r\n(function (MediaPeerSegmentStatus) {\r\n    MediaPeerSegmentStatus[MediaPeerSegmentStatus[\"Loaded\"] = 0] = \"Loaded\";\r\n    MediaPeerSegmentStatus[MediaPeerSegmentStatus[\"LoadingByHttp\"] = 1] = \"LoadingByHttp\";\r\n})(MediaPeerSegmentStatus = exports.MediaPeerSegmentStatus || (exports.MediaPeerSegmentStatus = {}));\r\nclass DownloadingSegment {\r\n    constructor(id, size) {\r\n        this.id = id;\r\n        this.size = size;\r\n        this.bytesDownloaded = 0;\r\n        this.pieces = [];\r\n    }\r\n}\r\nclass MediaPeer extends stringly_typed_event_emitter_1.STEEmitter {\r\n    constructor(\r\n    // eslint-disable-next-line\r\n    peer, settings) {\r\n        super();\r\n        this.peer = peer;\r\n        this.settings = settings;\r\n        this.remoteAddress = \"\";\r\n        this.downloadingSegmentId = null;\r\n        this.downloadingSegment = null;\r\n        this.segmentsMap = new Map();\r\n        this.debug = (0, debug_1.default)(\"p2pml:media-peer\");\r\n        this.timer = null;\r\n        this.onPeerConnect = () => {\r\n            this.debug(\"peer connect\", this.id, this);\r\n            this.remoteAddress = this.peer.remoteAddress;\r\n            this.emit(\"connect\", this);\r\n        };\r\n        this.onPeerClose = () => {\r\n            this.debug(\"peer close\", this.id, this);\r\n            this.terminateSegmentRequest();\r\n            this.emit(\"close\", this);\r\n        };\r\n        this.onPeerError = (error) => {\r\n            this.debug(\"peer error\", this.id, error, this);\r\n        };\r\n        this.receiveSegmentPiece = (data) => {\r\n            if (!this.downloadingSegment) {\r\n                // The segment was not requested or canceled\r\n                this.debug(\"peer segment not requested\", this.id, this);\r\n                return;\r\n            }\r\n            this.downloadingSegment.bytesDownloaded += data.byteLength;\r\n            this.downloadingSegment.pieces.push(data);\r\n            const segmentId = this.downloadingSegment.id;\r\n            this.emit(\"bytes-downloaded\", this, segmentId, data.byteLength);\r\n            if (this.downloadingSegment.bytesDownloaded === this.downloadingSegment.size) {\r\n                const segmentData = new Uint8Array(this.downloadingSegment.size);\r\n                let offset = 0;\r\n                for (const piece of this.downloadingSegment.pieces) {\r\n                    segmentData.set(new Uint8Array(piece), offset);\r\n                    offset += piece.byteLength;\r\n                }\r\n                this.debug(\"peer segment download done\", this.id, segmentId, this);\r\n                this.terminateSegmentRequest();\r\n                this.emit(\"segment-loaded\", this, segmentId, segmentData.buffer);\r\n            }\r\n            else if (this.downloadingSegment.bytesDownloaded > this.downloadingSegment.size) {\r\n                this.debug(\"peer segment download bytes mismatch\", this.id, segmentId, this);\r\n                this.terminateSegmentRequest();\r\n                this.emit(\"segment-error\", this, segmentId, \"Too many bytes received for segment\");\r\n            }\r\n        };\r\n        this.getJsonCommand = (data) => {\r\n            const bytes = new Uint8Array(data);\r\n            // Serialized JSON string check by first, second and last characters: '{\" .... }'\r\n            if (bytes[0] === 123 && bytes[1] === 34 && bytes[data.byteLength - 1] === 125) {\r\n                try {\r\n                    return JSON.parse(new TextDecoder().decode(data));\r\n                }\r\n                catch (_a) {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        this.onPeerData = (data) => {\r\n            const command = this.getJsonCommand(data);\r\n            if (command === null) {\r\n                this.receiveSegmentPiece(data);\r\n                return;\r\n            }\r\n            if (this.downloadingSegment) {\r\n                this.debug(\"peer segment download is interrupted by a command\", this.id, this);\r\n                const segmentId = this.downloadingSegment.id;\r\n                this.terminateSegmentRequest();\r\n                this.emit(\"segment-error\", this, segmentId, \"Segment download is interrupted by a command\");\r\n                return;\r\n            }\r\n            this.debug(\"peer receive command\", this.id, command, this);\r\n            switch (command.c) {\r\n                case MediaPeerCommands.SegmentsMap:\r\n                    this.segmentsMap = this.createSegmentsMap(command.m);\r\n                    this.emit(\"data-updated\");\r\n                    break;\r\n                case MediaPeerCommands.SegmentRequest:\r\n                    this.emit(\"segment-request\", this, command.i);\r\n                    break;\r\n                case MediaPeerCommands.SegmentData:\r\n                    if (this.downloadingSegmentId &&\r\n                        this.downloadingSegmentId === command.i &&\r\n                        typeof command.s === \"number\" &&\r\n                        command.s >= 0) {\r\n                        this.downloadingSegment = new DownloadingSegment(command.i, command.s);\r\n                        this.emit(\"segment-start-load\", this.downloadingSegment.id);\r\n                        this.emit(\"segment-size\", this.downloadingSegment.id, this.downloadingSegment.size);\r\n                        this.cancelResponseTimeoutTimer();\r\n                    }\r\n                    break;\r\n                case MediaPeerCommands.SegmentAbsent:\r\n                    if (this.downloadingSegmentId && this.downloadingSegmentId === command.i) {\r\n                        this.terminateSegmentRequest();\r\n                        this.segmentsMap.delete(command.i);\r\n                        this.emit(\"segment-absent\", this, command.i);\r\n                    }\r\n                    break;\r\n                case MediaPeerCommands.CancelSegmentRequest:\r\n                    // TODO: peer stop sending buffer\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n        this.createSegmentsMap = (segments) => {\r\n            if (!(segments instanceof Object)) {\r\n                return new Map();\r\n            }\r\n            const segmentsMap = new Map();\r\n            for (const streamSwarmId of Object.keys(segments)) {\r\n                const swarmData = segments[streamSwarmId];\r\n                if (!(swarmData instanceof Array) ||\r\n                    swarmData.length !== 2 ||\r\n                    typeof swarmData[0] !== \"string\" ||\r\n                    !(swarmData[1] instanceof Array)) {\r\n                    return new Map();\r\n                }\r\n                const segmentsIds = swarmData[0].split(\"|\");\r\n                const segmentsStatuses = swarmData[1];\r\n                if (segmentsIds.length !== segmentsStatuses.length) {\r\n                    return new Map();\r\n                }\r\n                for (let i = 0; i < segmentsIds.length; i++) {\r\n                    const segmentStatus = segmentsStatuses[i];\r\n                    if (typeof segmentStatus !== \"number\" || MediaPeerSegmentStatus[segmentStatus] === undefined) {\r\n                        return new Map();\r\n                    }\r\n                    segmentsMap.set(`${streamSwarmId}+${segmentsIds[i]}`, segmentStatus);\r\n                }\r\n            }\r\n            return segmentsMap;\r\n        };\r\n        this.sendCommand = (command) => {\r\n            this.debug(\"peer send command\", this.id, command, this);\r\n            this.peer.write(JSON.stringify(command));\r\n        };\r\n        this.destroy = () => {\r\n            this.debug(\"peer destroy\", this.id, this);\r\n            this.terminateSegmentRequest();\r\n            this.peer.destroy();\r\n        };\r\n        this.getDownloadingSegmentId = () => {\r\n            return this.downloadingSegmentId;\r\n        };\r\n        this.getSegmentsMap = () => {\r\n            return this.segmentsMap;\r\n        };\r\n        this.sendSegmentsMap = (segmentsMap) => {\r\n            this.sendCommand({ c: MediaPeerCommands.SegmentsMap, m: segmentsMap });\r\n        };\r\n        this.sendSegmentData = (segmentId, data) => {\r\n            this.sendCommand({\r\n                c: MediaPeerCommands.SegmentData,\r\n                i: segmentId,\r\n                s: data.byteLength,\r\n            });\r\n            let bytesLeft = data.byteLength;\r\n            while (bytesLeft > 0) {\r\n                const bytesToSend = bytesLeft >= this.settings.webRtcMaxMessageSize ? this.settings.webRtcMaxMessageSize : bytesLeft;\r\n                const buffer = buffer_1.Buffer.from(data, data.byteLength - bytesLeft, bytesToSend);\r\n                this.peer.write(buffer);\r\n                bytesLeft -= bytesToSend;\r\n            }\r\n            this.emit(\"bytes-uploaded\", this, segmentId, data.byteLength);\r\n        };\r\n        this.sendSegmentAbsent = (segmentId) => {\r\n            this.sendCommand({ c: MediaPeerCommands.SegmentAbsent, i: segmentId });\r\n        };\r\n        this.requestSegment = (segmentId) => {\r\n            if (this.downloadingSegmentId) {\r\n                throw new Error(\"A segment is already downloading: \" + this.downloadingSegmentId);\r\n            }\r\n            this.sendCommand({ c: MediaPeerCommands.SegmentRequest, i: segmentId });\r\n            this.downloadingSegmentId = segmentId;\r\n            this.runResponseTimeoutTimer();\r\n        };\r\n        this.cancelSegmentRequest = () => {\r\n            let downloadingSegment;\r\n            if (this.downloadingSegmentId) {\r\n                const segmentId = this.downloadingSegmentId;\r\n                downloadingSegment = this.downloadingSegment ? this.downloadingSegment.pieces : undefined;\r\n                this.terminateSegmentRequest();\r\n                this.sendCommand({ c: MediaPeerCommands.CancelSegmentRequest, i: segmentId });\r\n            }\r\n            return downloadingSegment;\r\n        };\r\n        this.runResponseTimeoutTimer = () => {\r\n            this.timer = setTimeout(() => {\r\n                this.timer = null;\r\n                if (!this.downloadingSegmentId) {\r\n                    return;\r\n                }\r\n                const segmentId = this.downloadingSegmentId;\r\n                this.cancelSegmentRequest();\r\n                this.emit(\"segment-timeout\", this, segmentId); // TODO: send peer not responding event\r\n            }, this.settings.p2pSegmentDownloadTimeout);\r\n        };\r\n        this.cancelResponseTimeoutTimer = () => {\r\n            if (this.timer) {\r\n                clearTimeout(this.timer);\r\n                this.timer = null;\r\n            }\r\n        };\r\n        this.terminateSegmentRequest = () => {\r\n            this.downloadingSegmentId = null;\r\n            this.downloadingSegment = null;\r\n            this.cancelResponseTimeoutTimer();\r\n        };\r\n        this.peer.on(\"connect\", this.onPeerConnect);\r\n        this.peer.on(\"close\", this.onPeerClose);\r\n        this.peer.on(\"error\", this.onPeerError);\r\n        this.peer.on(\"data\", this.onPeerData);\r\n        this.id = peer.id;\r\n    }\r\n}\r\nexports.MediaPeer = MediaPeer;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.P2PMediaManager = void 0;\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst client_1 = __importDefault(require(\"bittorrent-tracker/client\"));\r\nconst buffer_1 = require(\"buffer\");\r\nconst sha1_1 = __importDefault(require(\"sha.js/sha1\"));\r\nconst stringly_typed_event_emitter_1 = require(\"./stringly-typed-event-emitter\");\r\nconst media_peer_1 = require(\"./media-peer\");\r\nconst index_1 = require(\"./index\");\r\nconst PEER_PROTOCOL_VERSION = 2;\r\nconst PEER_ID_VERSION_STRING = index_1.version.replace(/\\d*./g, (v) => `0${parseInt(v, 10) % 100}`.slice(-2)).slice(0, 4);\r\nconst PEER_ID_VERSION_PREFIX = `-WW${PEER_ID_VERSION_STRING}-`; // Using WebTorrent client ID in order to not be banned by websocket trackers\r\nclass PeerSegmentRequest {\r\n    constructor(peerId, segment) {\r\n        this.peerId = peerId;\r\n        this.segment = segment;\r\n    }\r\n}\r\nfunction generatePeerId() {\r\n    const PEER_ID_SYMBOLS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    const PEER_ID_LENGTH = 20;\r\n    let peerId = PEER_ID_VERSION_PREFIX;\r\n    for (let i = 0; i < PEER_ID_LENGTH - PEER_ID_VERSION_PREFIX.length; i++) {\r\n        peerId += PEER_ID_SYMBOLS.charAt(Math.floor(Math.random() * PEER_ID_SYMBOLS.length));\r\n    }\r\n    return new TextEncoder().encode(peerId).buffer;\r\n}\r\nclass P2PMediaManager extends stringly_typed_event_emitter_1.STEEmitter {\r\n    constructor(segmentsStorage, settings) {\r\n        super();\r\n        this.segmentsStorage = segmentsStorage;\r\n        this.settings = settings;\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.trackerClient = null;\r\n        this.peers = new Map();\r\n        this.peerCandidates = new Map();\r\n        this.peerSegmentRequests = new Map();\r\n        this.streamSwarmId = null;\r\n        this.debug = (0, debug_1.default)(\"p2pml:p2p-media-manager\");\r\n        this.pendingTrackerClient = null;\r\n        this.getPeers = () => {\r\n            return this.peers;\r\n        };\r\n        this.getPeerId = () => {\r\n            return buffer_1.Buffer.from(this.peerId).toString(\"hex\");\r\n        };\r\n        this.setStreamSwarmId = (streamSwarmId, masterSwarmId) => {\r\n            if (this.streamSwarmId === streamSwarmId) {\r\n                return;\r\n            }\r\n            this.destroy(true);\r\n            this.streamSwarmId = streamSwarmId;\r\n            this.masterSwarmId = masterSwarmId;\r\n            this.debug(\"stream swarm ID\", this.streamSwarmId);\r\n            this.pendingTrackerClient = {\r\n                isDestroyed: false,\r\n            };\r\n            const pendingTrackerClient = this.pendingTrackerClient;\r\n            // TODO: native browser 'crypto.subtle' implementation doesn't work in Chrome in insecure pages\r\n            // TODO: Edge doesn't support SHA-1. Change to SHA-256 once Edge support is required.\r\n            // const infoHash = await crypto.subtle.digest(\"SHA-1\", new TextEncoder().encode(PEER_PROTOCOL_VERSION + this.streamSwarmId));\r\n            const infoHash = new sha1_1.default().update(`${PEER_PROTOCOL_VERSION}${this.streamSwarmId}`).digest();\r\n            // destroy may be called while waiting for the hash to be calculated\r\n            if (!pendingTrackerClient.isDestroyed) {\r\n                this.pendingTrackerClient = null;\r\n                this.createClient(infoHash);\r\n            }\r\n            else if (this.trackerClient !== null) {\r\n                this.trackerClient.destroy();\r\n                this.trackerClient = null;\r\n            }\r\n        };\r\n        this.createClient = (infoHash) => {\r\n            if (!this.settings.useP2P) {\r\n                return;\r\n            }\r\n            const clientOptions = {\r\n                infoHash: buffer_1.Buffer.from(infoHash, 0, 20),\r\n                peerId: buffer_1.Buffer.from(this.peerId, 0, 20),\r\n                announce: this.settings.trackerAnnounce,\r\n                rtcConfig: this.settings.rtcConfig,\r\n                port: 6881,\r\n                getAnnounceOpts: () => {\r\n                    return { numwant: this.settings.peerRequestsPerAnnounce };\r\n                },\r\n            };\r\n            let oldTrackerClient = this.trackerClient;\r\n            this.trackerClient = new client_1.default(clientOptions);\r\n            this.trackerClient.on(\"error\", this.onTrackerError);\r\n            this.trackerClient.on(\"warning\", this.onTrackerWarning);\r\n            this.trackerClient.on(\"update\", this.onTrackerUpdate);\r\n            this.trackerClient.on(\"peer\", this.onTrackerPeer);\r\n            this.trackerClient.start();\r\n            if (oldTrackerClient !== null) {\r\n                oldTrackerClient.destroy();\r\n                oldTrackerClient = null;\r\n            }\r\n        };\r\n        this.onTrackerError = (error) => {\r\n            this.debug(\"tracker error\", error);\r\n        };\r\n        this.onTrackerWarning = (warning) => {\r\n            this.debug(\"tracker warning\", warning);\r\n        };\r\n        this.onTrackerUpdate = (data) => {\r\n            this.debug(\"tracker update\", data);\r\n            this.emit(\"tracker-update\", data);\r\n        };\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.onTrackerPeer = (trackerPeer) => {\r\n            this.debug(\"tracker peer\", trackerPeer.id, trackerPeer);\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            if (this.peers.has(trackerPeer.id)) {\r\n                this.debug(\"tracker peer already connected\", trackerPeer.id, trackerPeer);\r\n                trackerPeer.destroy();\r\n                return;\r\n            }\r\n            const peer = new media_peer_1.MediaPeer(trackerPeer, this.settings);\r\n            peer.on(\"connect\", this.onPeerConnect);\r\n            peer.on(\"close\", this.onPeerClose);\r\n            peer.on(\"data-updated\", this.onPeerDataUpdated);\r\n            peer.on(\"segment-request\", this.onSegmentRequest);\r\n            peer.on(\"segment-loaded\", this.onSegmentLoaded);\r\n            peer.on(\"segment-absent\", this.onSegmentAbsent);\r\n            peer.on(\"segment-error\", this.onSegmentError);\r\n            peer.on(\"segment-size\", this.onSegmentSize);\r\n            peer.on(\"segment-start-load\", this.onSegmentStartLoad);\r\n            peer.on(\"segment-timeout\", this.onSegmentTimeout);\r\n            peer.on(\"bytes-downloaded\", this.onPieceBytesDownloaded);\r\n            peer.on(\"bytes-uploaded\", this.onPieceBytesUploaded);\r\n            let peerCandidatesById = this.peerCandidates.get(peer.id);\r\n            if (!peerCandidatesById) {\r\n                peerCandidatesById = [];\r\n                this.peerCandidates.set(peer.id, peerCandidatesById);\r\n            }\r\n            peerCandidatesById.push(peer);\r\n        };\r\n        this.download = (segment) => {\r\n            if (this.isDownloading(segment)) {\r\n                return false;\r\n            }\r\n            const candidates = [];\r\n            for (const peer of this.peers.values()) {\r\n                if (peer.getDownloadingSegmentId() === null &&\r\n                    peer.getSegmentsMap().get(segment.id) === media_peer_1.MediaPeerSegmentStatus.Loaded) {\r\n                    candidates.push(peer);\r\n                }\r\n            }\r\n            if (candidates.length === 0) {\r\n                return false;\r\n            }\r\n            const peer = candidates[Math.floor(Math.random() * candidates.length)];\r\n            peer.requestSegment(segment.id);\r\n            this.peerSegmentRequests.set(segment.id, new PeerSegmentRequest(peer.id, segment));\r\n            return true;\r\n        };\r\n        this.abort = (segment) => {\r\n            let downloadingSegment;\r\n            const peerSegmentRequest = this.peerSegmentRequests.get(segment.id);\r\n            if (peerSegmentRequest) {\r\n                const peer = this.peers.get(peerSegmentRequest.peerId);\r\n                if (peer) {\r\n                    downloadingSegment = peer.cancelSegmentRequest();\r\n                }\r\n                this.peerSegmentRequests.delete(segment.id);\r\n            }\r\n            return downloadingSegment;\r\n        };\r\n        this.isDownloading = (segment) => {\r\n            return this.peerSegmentRequests.has(segment.id);\r\n        };\r\n        this.getActiveDownloadsCount = () => {\r\n            return this.peerSegmentRequests.size;\r\n        };\r\n        this.destroy = (swarmChange = false) => {\r\n            this.streamSwarmId = null;\r\n            if (this.trackerClient) {\r\n                this.trackerClient.stop();\r\n                if (swarmChange) {\r\n                    // Don't destroy trackerClient to reuse its WebSocket connection to the tracker server\r\n                    this.trackerClient.removeAllListeners(\"error\");\r\n                    this.trackerClient.removeAllListeners(\"warning\");\r\n                    this.trackerClient.removeAllListeners(\"update\");\r\n                    this.trackerClient.removeAllListeners(\"peer\");\r\n                }\r\n                else {\r\n                    this.trackerClient.destroy();\r\n                    this.trackerClient = null;\r\n                }\r\n            }\r\n            if (this.pendingTrackerClient) {\r\n                this.pendingTrackerClient.isDestroyed = true;\r\n                this.pendingTrackerClient = null;\r\n            }\r\n            this.peers.forEach((peer) => peer.destroy());\r\n            this.peers.clear();\r\n            this.peerSegmentRequests.clear();\r\n            for (const peerCandidateById of this.peerCandidates.values()) {\r\n                for (const peerCandidate of peerCandidateById) {\r\n                    peerCandidate.destroy();\r\n                }\r\n            }\r\n            this.peerCandidates.clear();\r\n        };\r\n        this.sendSegmentsMapToAll = (segmentsMap) => {\r\n            this.peers.forEach((peer) => peer.sendSegmentsMap(segmentsMap));\r\n        };\r\n        this.sendSegmentsMap = (peerId, segmentsMap) => {\r\n            const peer = this.peers.get(peerId);\r\n            if (peer) {\r\n                peer.sendSegmentsMap(segmentsMap);\r\n            }\r\n        };\r\n        this.getOverallSegmentsMap = () => {\r\n            const overallSegmentsMap = new Map();\r\n            for (const peer of this.peers.values()) {\r\n                for (const [segmentId, segmentStatus] of peer.getSegmentsMap()) {\r\n                    if (segmentStatus === media_peer_1.MediaPeerSegmentStatus.Loaded) {\r\n                        overallSegmentsMap.set(segmentId, media_peer_1.MediaPeerSegmentStatus.Loaded);\r\n                    }\r\n                    else if (!overallSegmentsMap.get(segmentId)) {\r\n                        overallSegmentsMap.set(segmentId, media_peer_1.MediaPeerSegmentStatus.LoadingByHttp);\r\n                    }\r\n                }\r\n            }\r\n            return overallSegmentsMap;\r\n        };\r\n        this.onPieceBytesDownloaded = (peer, segmentId, bytes) => {\r\n            const peerSegmentRequest = this.peerSegmentRequests.get(segmentId);\r\n            if (peerSegmentRequest) {\r\n                this.emit(\"bytes-downloaded\", peerSegmentRequest.segment, bytes, peer.id);\r\n            }\r\n        };\r\n        this.onPieceBytesUploaded = async (peer, segmentId, bytes) => {\r\n            if (this.masterSwarmId === undefined) {\r\n                return;\r\n            }\r\n            const segment = await this.segmentsStorage.getSegment(segmentId, this.masterSwarmId);\r\n            if (segment) {\r\n                this.emit(\"bytes-uploaded\", segment, bytes, peer.id);\r\n            }\r\n        };\r\n        this.onPeerConnect = (peer) => {\r\n            const connectedPeer = this.peers.get(peer.id);\r\n            if (connectedPeer) {\r\n                this.debug(\"tracker peer already connected (in peer connect)\", peer.id, peer);\r\n                peer.destroy();\r\n                return;\r\n            }\r\n            // First peer with the ID connected\r\n            this.peers.set(peer.id, peer);\r\n            // Destroy all other peer candidates\r\n            const peerCandidatesById = this.peerCandidates.get(peer.id);\r\n            if (peerCandidatesById) {\r\n                for (const peerCandidate of peerCandidatesById) {\r\n                    if (peerCandidate !== peer) {\r\n                        peerCandidate.destroy();\r\n                    }\r\n                }\r\n                this.peerCandidates.delete(peer.id);\r\n            }\r\n            this.emit(\"peer-connected\", { id: peer.id, remoteAddress: peer.remoteAddress });\r\n        };\r\n        this.onPeerClose = (peer) => {\r\n            if (this.peers.get(peer.id) !== peer) {\r\n                // Try to delete the peer candidate\r\n                const peerCandidatesById = this.peerCandidates.get(peer.id);\r\n                if (!peerCandidatesById) {\r\n                    return;\r\n                }\r\n                const index = peerCandidatesById.indexOf(peer);\r\n                if (index !== -1) {\r\n                    peerCandidatesById.splice(index, 1);\r\n                }\r\n                if (peerCandidatesById.length === 0) {\r\n                    this.peerCandidates.delete(peer.id);\r\n                }\r\n                return;\r\n            }\r\n            for (const [key, value] of this.peerSegmentRequests) {\r\n                if (value.peerId === peer.id) {\r\n                    this.peerSegmentRequests.delete(key);\r\n                }\r\n            }\r\n            this.peers.delete(peer.id);\r\n            this.emit(\"peer-data-updated\");\r\n            this.emit(\"peer-closed\", peer.id);\r\n        };\r\n        this.onPeerDataUpdated = () => {\r\n            this.emit(\"peer-data-updated\");\r\n        };\r\n        this.onSegmentRequest = async (peer, segmentId) => {\r\n            if (this.masterSwarmId === undefined) {\r\n                return;\r\n            }\r\n            const segment = await this.segmentsStorage.getSegment(segmentId, this.masterSwarmId);\r\n            if (segment && segment.data) {\r\n                peer.sendSegmentData(segmentId, segment.data);\r\n            }\r\n            else {\r\n                peer.sendSegmentAbsent(segmentId);\r\n            }\r\n        };\r\n        this.onSegmentLoaded = async (peer, segmentId, data) => {\r\n            const peerSegmentRequest = this.peerSegmentRequests.get(segmentId);\r\n            if (!peerSegmentRequest) {\r\n                return;\r\n            }\r\n            const segment = peerSegmentRequest.segment;\r\n            if (this.settings.segmentValidator) {\r\n                try {\r\n                    await this.settings.segmentValidator(Object.assign(Object.assign({}, segment), { data: data }), \"p2p\", peer.id);\r\n                }\r\n                catch (error) {\r\n                    this.debug(\"segment validator failed\", error);\r\n                    this.peerSegmentRequests.delete(segmentId);\r\n                    this.emit(\"segment-error\", segment, error, peer.id);\r\n                    this.onPeerClose(peer);\r\n                    return;\r\n                }\r\n            }\r\n            this.peerSegmentRequests.delete(segmentId);\r\n            this.emit(\"segment-loaded\", segment, data, peer.id);\r\n        };\r\n        this.onSegmentAbsent = (peer, segmentId) => {\r\n            this.peerSegmentRequests.delete(segmentId);\r\n            this.emit(\"peer-data-updated\");\r\n        };\r\n        this.onSegmentError = (peer, segmentId, description) => {\r\n            const peerSegmentRequest = this.peerSegmentRequests.get(segmentId);\r\n            if (peerSegmentRequest) {\r\n                this.peerSegmentRequests.delete(segmentId);\r\n                this.emit(\"segment-error\", peerSegmentRequest.segment, description, peer.id);\r\n            }\r\n        };\r\n        this.onSegmentSize = (segmentId, size) => {\r\n            const peerSegmentRequest = this.peerSegmentRequests.get(segmentId);\r\n            if (peerSegmentRequest) {\r\n                this.emit(\"segment-size\", peerSegmentRequest.segment, size);\r\n            }\r\n        };\r\n        this.onSegmentStartLoad = (segmentId, size) => {\r\n            const peerSegmentRequest = this.peerSegmentRequests.get(segmentId);\r\n            if (peerSegmentRequest) {\r\n                this.emit(\"segment-start-load\", peerSegmentRequest.segment, size);\r\n            }\r\n        };\r\n        this.onSegmentTimeout = (peer, segmentId) => {\r\n            const peerSegmentRequest = this.peerSegmentRequests.get(segmentId);\r\n            if (peerSegmentRequest) {\r\n                this.peerSegmentRequests.delete(segmentId);\r\n                peer.destroy();\r\n                if (this.peers.delete(peerSegmentRequest.peerId)) {\r\n                    this.emit(\"peer-data-updated\");\r\n                }\r\n            }\r\n        };\r\n        this.peerId = settings.useP2P ? generatePeerId() : new ArrayBuffer(0);\r\n        if (this.debug.enabled) {\r\n            this.debug(\"peer ID\", this.getPeerId(), new TextDecoder().decode(this.peerId));\r\n        }\r\n    }\r\n}\r\nexports.P2PMediaManager = P2PMediaManager;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2019 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SegmentsMemoryStorage = void 0;\r\nclass SegmentsMemoryStorage {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n        this.cache = new Map();\r\n        this.storeSegment = async (segment) => {\r\n            this.cache.set(segment.id, { segment, lastAccessed: performance.now() });\r\n        };\r\n        this.getSegmentsMap = async () => {\r\n            return this.cache;\r\n        };\r\n        this.getSegment = async (id) => {\r\n            const cacheItem = this.cache.get(id);\r\n            if (cacheItem === undefined) {\r\n                return undefined;\r\n            }\r\n            cacheItem.lastAccessed = performance.now();\r\n            return cacheItem.segment;\r\n        };\r\n        this.hasSegment = async (id) => {\r\n            return this.cache.has(id);\r\n        };\r\n        this.clean = async (masterSwarmId, lockedSegmentsFilter) => {\r\n            const segmentsToDelete = [];\r\n            const remainingSegments = [];\r\n            // Delete old segments\r\n            const now = performance.now();\r\n            for (const cachedSegment of this.cache.values()) {\r\n                if (now - cachedSegment.lastAccessed > this.settings.cachedSegmentExpiration) {\r\n                    segmentsToDelete.push(cachedSegment.segment.id);\r\n                }\r\n                else {\r\n                    remainingSegments.push(cachedSegment);\r\n                }\r\n            }\r\n            // Delete segments over cached count\r\n            let countOverhead = remainingSegments.length - this.settings.cachedSegmentsCount;\r\n            if (countOverhead > 0) {\r\n                remainingSegments.sort((a, b) => a.lastAccessed - b.lastAccessed);\r\n                for (const cachedSegment of remainingSegments) {\r\n                    if (lockedSegmentsFilter === undefined || !lockedSegmentsFilter(cachedSegment.segment.id)) {\r\n                        segmentsToDelete.push(cachedSegment.segment.id);\r\n                        countOverhead--;\r\n                        if (countOverhead === 0) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            segmentsToDelete.forEach((id) => this.cache.delete(id));\r\n            return segmentsToDelete.length > 0;\r\n        };\r\n        this.destroy = async () => {\r\n            this.cache.clear();\r\n        };\r\n    }\r\n}\r\nexports.SegmentsMemoryStorage = SegmentsMemoryStorage;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.STEEmitter = void 0;\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nconst events_1 = require(\"events\");\r\nclass STEEmitter extends events_1.EventEmitter {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.on = (event, listener) => super.on(event, listener);\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n        this.emit = (event, ...args) => super.emit(event, ...args);\r\n    }\r\n}\r\nexports.STEEmitter = STEEmitter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.byteRangeToString = exports.compareByteRanges = exports.getByteRange = void 0;\r\nfunction getByteRange(context) {\r\n    return context.rangeEnd && context.rangeStart !== undefined\r\n        ? { offset: context.rangeStart, length: context.rangeEnd - context.rangeStart }\r\n        : undefined;\r\n}\r\nexports.getByteRange = getByteRange;\r\nfunction compareByteRanges(b1, b2) {\r\n    return b1 === undefined ? b2 === undefined : b2 !== undefined && b1.length === b2.length && b1.offset === b2.offset;\r\n}\r\nexports.compareByteRanges = compareByteRanges;\r\nfunction byteRangeToString(byteRange) {\r\n    if (byteRange === undefined) {\r\n        return undefined;\r\n    }\r\n    const end = byteRange.offset + byteRange.length - 1;\r\n    return `bytes=${byteRange.offset}-${end}`;\r\n}\r\nexports.byteRangeToString = byteRangeToString;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Engine = void 0;\r\nconst events_1 = require(\"events\");\r\nconst p2p_media_loader_core_basyton_1 = require(\"p2p-media-loader-core-basyton\");\r\nconst segment_manager_1 = require(\"./segment-manager\");\r\nconst hlsjs_loader_1 = require(\"./hlsjs-loader\");\r\nclass Engine extends events_1.EventEmitter {\r\n    constructor(settings = {}) {\r\n        super();\r\n        this.loader = new p2p_media_loader_core_basyton_1.HybridLoader(settings.loader);\r\n        this.segmentManager = new segment_manager_1.SegmentManager(this.loader, settings.segments, settings.loader);\r\n        Object.keys(p2p_media_loader_core_basyton_1.Events)\r\n            .map((eventKey) => p2p_media_loader_core_basyton_1.Events[eventKey])\r\n            .forEach((event) => this.loader.on(event, (...args) => this.emit(event, ...args)));\r\n    }\r\n    static isSupported() {\r\n        return p2p_media_loader_core_basyton_1.HybridLoader.isSupported();\r\n    }\r\n    createLoaderClass() {\r\n        var _a;\r\n        const engine = this; // eslint-disable-line @typescript-eslint/no-this-alias\r\n        const loader = (_a = class {\r\n                constructor() {\r\n                    this.load = async (context, config, callbacks) => {\r\n                        this.context = context;\r\n                        this.callbacks = callbacks;\r\n                        await this.impl.load(context, config, callbacks);\r\n                    };\r\n                    this.abort = () => {\r\n                        if (this.context) {\r\n                            this.impl.abort(this.context, this.callbacks);\r\n                        }\r\n                    };\r\n                    this.destroy = () => {\r\n                        if (this.context) {\r\n                            this.impl.abort(this.context);\r\n                        }\r\n                    };\r\n                    this.getResponseHeader = () => undefined;\r\n                    this.impl = new hlsjs_loader_1.HlsJsLoader(engine.segmentManager);\r\n                    engine.setLatestLoaderImpl(this);\r\n                    this.stats = this.impl.stats;\r\n                }\r\n            },\r\n            _a.getEngine = () => {\r\n                return engine;\r\n            },\r\n            _a);\r\n        return loader;\r\n    }\r\n    async destroy() {\r\n        await this.segmentManager.destroy();\r\n    }\r\n    abortCurrentRequest() {\r\n        if (this.latestLoaderImpl) {\r\n            this.latestLoaderImpl.abort();\r\n            this.latestLoaderImpl = undefined;\r\n        }\r\n    }\r\n    getSettings() {\r\n        return {\r\n            segments: this.segmentManager.getSettings(),\r\n            loader: this.loader.getSettings(),\r\n        };\r\n    }\r\n    getDetails() {\r\n        return {\r\n            loader: this.loader.getDetails(),\r\n        };\r\n    }\r\n    setPlayingSegment(url, byteRange, start, duration) {\r\n        this.segmentManager.setPlayingSegment(url, byteRange, start, duration);\r\n    }\r\n    setPlayingSegmentByCurrentTime(playheadPosition) {\r\n        this.segmentManager.setPlayingSegmentByCurrentTime(playheadPosition);\r\n    }\r\n    setLatestLoaderImpl(loader) {\r\n        this.latestLoaderImpl = loader;\r\n    }\r\n}\r\nexports.Engine = Engine;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HlsJsLoader = void 0;\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst p2p_media_loader_core_basyton_1 = require(\"p2p-media-loader-core-basyton\");\r\nconst byte_range_1 = require(\"./byte-range\");\r\nclass HlsJsLoader {\r\n    constructor(segmentManager) {\r\n        this.segmentManager = segmentManager;\r\n        this.debug = (0, debug_1.default)(\"p2pml:hlsjs-loader\");\r\n        this.stats = {\r\n            loaded: 0,\r\n            total: 0,\r\n            aborted: false,\r\n            retry: 0,\r\n            chunkCount: 0,\r\n            bwEstimate: 0,\r\n            loading: {\r\n                start: 0,\r\n                end: 0,\r\n                first: 0,\r\n            },\r\n            parsing: {\r\n                start: 0,\r\n                end: 0,\r\n            },\r\n            buffering: {\r\n                start: 0,\r\n                end: 0,\r\n                first: 0,\r\n            },\r\n        };\r\n        this.boundOnSegmentAbort = this.onSegmentAbort.bind(this);\r\n        this.boundOnUpdateSegmentSize = this.onUpdateSegmentSize.bind(this);\r\n        this.boundOnUpdateLoaded = this.onUpdateLoaded.bind(this);\r\n        this.boundOnSegmentStartLoad = this.onSegmentStartLoad.bind(this);\r\n        this.debugId = \"\";\r\n    }\r\n    async load(context, _config, callbacks) {\r\n        this.context = context;\r\n        this.callbacks = callbacks;\r\n        HlsJsLoader.updateStatsToStartLoading(this.stats);\r\n        if (this.context.type) {\r\n            this.debug(`Loading playlist ${this.context.url}.`);\r\n            try {\r\n                const result = await this.segmentManager.loadPlaylist(this.context.url);\r\n                this.debug(`Playlist ${this.context.url} loaded.`);\r\n                this.successPlaylist(result, this.context, this.callbacks);\r\n            }\r\n            catch (e) {\r\n                this.error(e, this.context, this.callbacks);\r\n            }\r\n        }\r\n        else if (this.context.frag) {\r\n            this.loader = this.segmentManager.loader;\r\n            this.byteRange = (0, byte_range_1.getByteRange)(this.context);\r\n            this.debugId = this.byteRange\r\n                ? `${this.context.url} / ${this.byteRange.offset}`\r\n                : this.context.url;\r\n            this.debug(`Loading fragment ${this.debugId}.`);\r\n            // We may be downloading the segment by P2P, so we don\"t care about the stats sent to HLS ABR\r\n            this.interval = setInterval(() => HlsJsLoader.updateStatsToStartLoading(this.stats), 200);\r\n            this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentAbort, this.boundOnSegmentAbort);\r\n            this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentSize, this.boundOnUpdateSegmentSize);\r\n            this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentStartLoad, this.boundOnSegmentStartLoad);\r\n            try {\r\n                const result = await this.segmentManager.loadSegment(this.context.url, this.byteRange);\r\n                const { content } = result;\r\n                if (content) {\r\n                    this.successSegment(content, this.context, this.callbacks);\r\n                    this.debug(`Loaded fragment ${this.debugId}.`);\r\n                }\r\n                else {\r\n                    this.cleanup();\r\n                    this.debug(`Loaded empty fragment ${this.debugId} (aborted?).`);\r\n                }\r\n            }\r\n            catch (e) {\r\n                setTimeout(() => this.error(e, this.context, this.callbacks), 0);\r\n                this.debug(`Error in fragment ${this.debugId} loading.`, e);\r\n            }\r\n        }\r\n        else {\r\n            console.warn(\"Unknown load request\", this.context);\r\n        }\r\n    }\r\n    abort(context, callbacks) {\r\n        if (this.stats.loaded || this.stats.aborted)\r\n            return;\r\n        this.debug(`Aborting by hls.js fragment ${this.debugId} loading.`);\r\n        this.cleanup();\r\n        this.segmentManager.abortSegment(context.url, (0, byte_range_1.getByteRange)(context));\r\n        this.stats.aborted = true;\r\n        const onAbort = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onAbort;\r\n        if (onAbort) {\r\n            onAbort(this.stats, context, undefined);\r\n        }\r\n    }\r\n    successPlaylist(xhr, context, callbacks) {\r\n        this.cleanup();\r\n        const now = performance.now();\r\n        this.stats.loading.end = now;\r\n        this.stats.loaded = xhr.response.length;\r\n        this.stats.total = xhr.response.length;\r\n        callbacks.onSuccess({\r\n            url: xhr.responseURL,\r\n            data: xhr.response,\r\n        }, this.stats, context, undefined);\r\n    }\r\n    successSegment(content, context, callbacks) {\r\n        this.cleanup();\r\n        const now = performance.now();\r\n        this.stats.loading.end = now;\r\n        this.stats.loaded = content.byteLength;\r\n        this.stats.total = content.byteLength;\r\n        if (callbacks.onProgress) {\r\n            callbacks.onProgress(this.stats, context, content, undefined);\r\n        }\r\n        callbacks.onSuccess({\r\n            url: context.url,\r\n            data: content,\r\n        }, this.stats, context, undefined);\r\n    }\r\n    error(error, context, callbacks) {\r\n        this.cleanup();\r\n        callbacks.onError(error, context, undefined);\r\n    }\r\n    cleanup() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.interval = undefined;\r\n        }\r\n        if (this.loader) {\r\n            this.loader.off(p2p_media_loader_core_basyton_1.Events.SegmentStartLoad, this.boundOnSegmentStartLoad);\r\n            this.loader.off(p2p_media_loader_core_basyton_1.Events.SegmentSize, this.boundOnUpdateSegmentSize);\r\n            this.loader.off(p2p_media_loader_core_basyton_1.Events.PieceBytesDownloaded, this.boundOnUpdateLoaded);\r\n            this.loader.off(p2p_media_loader_core_basyton_1.Events.SegmentAbort, this.boundOnSegmentAbort);\r\n        }\r\n    }\r\n    onSegmentAbort(segment) {\r\n        var _a;\r\n        if (!this.isSegment(segment))\r\n            return;\r\n        this.debug(`Aborting by p2p-media-loader fragment ${this.debugId || \"\"}.`);\r\n        this.stats.aborted = true;\r\n        const onAbort = (_a = this.callbacks) === null || _a === void 0 ? void 0 : _a.onAbort;\r\n        if (onAbort) {\r\n            onAbort(this.stats, this.context, undefined);\r\n        }\r\n        this.cleanup();\r\n    }\r\n    onUpdateSegmentSize(segment, size) {\r\n        if (!this.isSegment(segment))\r\n            return;\r\n        this.stats.total = size;\r\n    }\r\n    onUpdateLoaded(_type, segment, bytes) {\r\n        if (!this.isSegment(segment))\r\n            return;\r\n        this.stats.loaded += bytes;\r\n    }\r\n    onSegmentStartLoad(method, segment) {\r\n        if (!this.interval || method !== \"http\" || !this.isSegment(segment))\r\n            return;\r\n        clearInterval(this.interval);\r\n        this.interval = undefined;\r\n        HlsJsLoader.updateStatsToStartLoading(this.stats);\r\n        this.loader.on(p2p_media_loader_core_basyton_1.Events.PieceBytesDownloaded, this.boundOnUpdateLoaded);\r\n    }\r\n    ;\r\n    isSegment(segment) {\r\n        return segment.url === this.context.url && segment.range === (0, byte_range_1.byteRangeToString)(this.byteRange);\r\n    }\r\n    static updateStatsToStartLoading(stats) {\r\n        if (stats.aborted)\r\n            return;\r\n        const start = performance.now();\r\n        stats.loading.start = start;\r\n        stats.loading.first = start;\r\n    }\r\n}\r\nexports.HlsJsLoader = HlsJsLoader;\r\n","\"use strict\";\r\n/**\r\n * @license Apache-2.0\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initJwPlayer = exports.initMediaElementJsPlayer = exports.initVideoJsHlsJsPlugin = exports.initVideoJsContribHlsJsPlayer = exports.initFlowplayerHlsJsPlayer = exports.initClapprPlayer = exports.initHlsJsPlayer = exports.version = void 0;\r\n/* eslint-disable */\r\nexports.version = \"0.6.2\";\r\n__exportStar(require(\"./engine\"), exports);\r\n__exportStar(require(\"./segment-manager\"), exports);\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst debug = (0, debug_1.default)(\"p2pml:hlsjs-init\");\r\nfunction initHlsJsPlayer(player) {\r\n    if (player && player.config && player.config.loader && typeof player.config.loader.getEngine === \"function\") {\r\n        initHlsJsEvents(player, player.config.loader.getEngine());\r\n    }\r\n}\r\nexports.initHlsJsPlayer = initHlsJsPlayer;\r\nfunction initClapprPlayer(player) {\r\n    player.on(\"play\", () => {\r\n        const playback = player.core.getCurrentPlayback();\r\n        if (playback._hls && !playback._hls._p2pm_linitialized) {\r\n            playback._hls._p2pm_linitialized = true;\r\n            initHlsJsPlayer(player.core.getCurrentPlayback()._hls);\r\n        }\r\n    });\r\n}\r\nexports.initClapprPlayer = initClapprPlayer;\r\nfunction initFlowplayerHlsJsPlayer(player) {\r\n    player.on(\"ready\", () => { var _a; return initHlsJsPlayer((_a = player.engine.hlsjs) !== null && _a !== void 0 ? _a : player.engine.hls); });\r\n}\r\nexports.initFlowplayerHlsJsPlayer = initFlowplayerHlsJsPlayer;\r\nfunction initVideoJsContribHlsJsPlayer(player) {\r\n    player.ready(() => {\r\n        const options = player.tech_.options_;\r\n        if (options &&\r\n            options.hlsjsConfig &&\r\n            options.hlsjsConfig.loader &&\r\n            typeof options.hlsjsConfig.loader.getEngine === \"function\") {\r\n            initHlsJsEvents(player.tech_, options.hlsjsConfig.loader.getEngine());\r\n        }\r\n    });\r\n}\r\nexports.initVideoJsContribHlsJsPlayer = initVideoJsContribHlsJsPlayer;\r\nfunction initVideoJsHlsJsPlugin() {\r\n    if (videojs == undefined || videojs.Html5Hlsjs == undefined) {\r\n        return;\r\n    }\r\n    videojs.Html5Hlsjs.addHook(\"beforeinitialize\", (videojsPlayer, hlsjs) => {\r\n        if (hlsjs.config && hlsjs.config.loader && typeof hlsjs.config.loader.getEngine === \"function\") {\r\n            initHlsJsEvents(hlsjs, hlsjs.config.loader.getEngine());\r\n        }\r\n    });\r\n}\r\nexports.initVideoJsHlsJsPlugin = initVideoJsHlsJsPlugin;\r\nfunction initMediaElementJsPlayer(mediaElement) {\r\n    mediaElement.addEventListener(\"hlsFragChanged\", (event) => {\r\n        const hls = mediaElement.hlsPlayer;\r\n        if (hls && hls.config && hls.config.loader && typeof hls.config.loader.getEngine === \"function\") {\r\n            const engine = hls.config.loader.getEngine();\r\n            if (event.data && event.data.length > 1) {\r\n                const frag = event.data[1].frag;\r\n                const byteRange = frag.byteRange.length !== 2\r\n                    ? undefined\r\n                    : { offset: frag.byteRange[0], length: frag.byteRange[1] - frag.byteRange[0] };\r\n                engine.setPlayingSegment(frag.url, byteRange, frag.start, frag.duration);\r\n            }\r\n        }\r\n    });\r\n    mediaElement.addEventListener(\"hlsDestroying\", async () => {\r\n        const hls = mediaElement.hlsPlayer;\r\n        if (hls && hls.config && hls.config.loader && typeof hls.config.loader.getEngine === \"function\") {\r\n            const engine = hls.config.loader.getEngine();\r\n            await engine.destroy();\r\n        }\r\n    });\r\n    mediaElement.addEventListener(\"hlsError\", (event) => {\r\n        const hls = mediaElement.hlsPlayer;\r\n        if (hls && hls.config && hls.config.loader && typeof hls.config.loader.getEngine === \"function\") {\r\n            if (event.data !== undefined && event.data.details === \"bufferStalledError\") {\r\n                const engine = hls.config.loader.getEngine();\r\n                engine.setPlayingSegmentByCurrentTime(hls.media.currentTime);\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initMediaElementJsPlayer = initMediaElementJsPlayer;\r\nfunction initJwPlayer(player, hlsjsConfig) {\r\n    const iid = setInterval(() => {\r\n        if (player.hls && player.hls.config) {\r\n            clearInterval(iid);\r\n            Object.assign(player.hls.config, hlsjsConfig);\r\n            initHlsJsPlayer(player.hls);\r\n        }\r\n    }, 200);\r\n}\r\nexports.initJwPlayer = initJwPlayer;\r\nfunction initHlsJsEvents(player, engine) {\r\n    player.on(\"hlsFragChanged\", (_event, data) => {\r\n        debug(\"HLS Frag changed.\", data);\r\n        const frag = data.frag;\r\n        const byteRange = frag.byteRange.length !== 2\r\n            ? undefined\r\n            : { offset: frag.byteRange[0], length: frag.byteRange[1] - frag.byteRange[0] };\r\n        engine.setPlayingSegment(frag.url, byteRange, frag.start, frag.duration);\r\n    });\r\n    player.on(\"hlsDestroying\", async () => {\r\n        await engine.destroy();\r\n    });\r\n    player.on(\"hlsError\", (_event, errorData) => {\r\n        if (errorData.details === \"bufferStalledError\") {\r\n            const htmlMediaElement = (player.media === undefined\r\n                ? player.el_ // videojs-contrib-hlsjs\r\n                : player.media); // all others\r\n            if (htmlMediaElement) {\r\n                engine.setPlayingSegmentByCurrentTime(htmlMediaElement.currentTime);\r\n            }\r\n        }\r\n    });\r\n    player.on('seeking', () => {\r\n        debug(\"Player seeking.\");\r\n        // Abort current HTTP/P2P request so HLS is not stuck with a P2P request when moving current video player time\r\n        // to a previously loaded fragment\r\n        engine.abortCurrentRequest();\r\n    });\r\n}\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SegmentManager = void 0;\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst p2p_media_loader_core_basyton_1 = require(\"p2p-media-loader-core-basyton\");\r\nconst m3u8_parser_1 = require(\"m3u8-parser\");\r\nconst byte_range_1 = require(\"./byte-range\");\r\nconst defaultSettings = {\r\n    forwardSegmentCount: 20,\r\n    swarmId: undefined,\r\n    assetsStorage: undefined,\r\n};\r\nclass SegmentManager {\r\n    constructor(loader, settings = {}, loadersettings = {}) {\r\n        this.debug = (0, debug_1.default)(\"p2pml:segment-manager\");\r\n        this.masterPlaylist = null;\r\n        this.variantPlaylists = new Map();\r\n        this.segmentRequest = null;\r\n        this.fetch = (...args) => fetch(...args);\r\n        this.playQueue = [];\r\n        this.onSegmentLoaded = (segment) => {\r\n            if (this.segmentRequest &&\r\n                this.segmentRequest.segmentUrl === segment.url &&\r\n                (0, byte_range_1.byteRangeToString)(this.segmentRequest.segmentByteRange) === segment.range) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                this.segmentRequest.onSuccess(segment.data.slice(0), segment.downloadBandwidth);\r\n                this.segmentRequest = null;\r\n            }\r\n        };\r\n        this.onSegmentError = (segment, error) => {\r\n            if (this.segmentRequest &&\r\n                this.segmentRequest.segmentUrl === segment.url &&\r\n                (0, byte_range_1.byteRangeToString)(this.segmentRequest.segmentByteRange) === segment.range) {\r\n                this.segmentRequest.onError(error);\r\n                this.segmentRequest = null;\r\n            }\r\n        };\r\n        this.onSegmentAbort = (segment) => {\r\n            if (this.segmentRequest &&\r\n                this.segmentRequest.segmentUrl === segment.url &&\r\n                (0, byte_range_1.byteRangeToString)(this.segmentRequest.segmentByteRange) === segment.range) {\r\n                this.segmentRequest.onError(\"Loading aborted: internal abort\");\r\n                this.segmentRequest = null;\r\n            }\r\n        };\r\n        this.settings = Object.assign(Object.assign({}, defaultSettings), settings);\r\n        this.loader = loader;\r\n        this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentLoaded, this.onSegmentLoaded);\r\n        this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentError, this.onSegmentError);\r\n        this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentAbort, this.onSegmentAbort);\r\n        if (loadersettings.localTransport) {\r\n            this.fetch = loadersettings.localTransport;\r\n        }\r\n    }\r\n    getSettings() {\r\n        return this.settings;\r\n    }\r\n    processPlaylist(requestUrl, content, responseUrl) {\r\n        const parser = new m3u8_parser_1.Parser();\r\n        parser.push(content);\r\n        parser.end();\r\n        const playlist = new Playlist(requestUrl, responseUrl, parser.manifest);\r\n        if (playlist.manifest.playlists) {\r\n            this.masterPlaylist = playlist;\r\n            for (const [key, variantPlaylist] of this.variantPlaylists) {\r\n                const { streamSwarmId, found, index } = this.getStreamSwarmId(variantPlaylist.requestUrl);\r\n                if (!found) {\r\n                    this.variantPlaylists.delete(key);\r\n                }\r\n                else {\r\n                    variantPlaylist.streamSwarmId = streamSwarmId;\r\n                    variantPlaylist.streamId = \"V\" + index.toString();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const { streamSwarmId, found, index } = this.getStreamSwarmId(requestUrl);\r\n            if (found || this.masterPlaylist === null) {\r\n                // do not add audio and subtitles to variants\r\n                playlist.streamSwarmId = streamSwarmId;\r\n                playlist.streamId = this.masterPlaylist === null ? undefined : \"V\" + index.toString();\r\n                this.variantPlaylists.set(requestUrl, playlist);\r\n                this.updateSegments();\r\n            }\r\n        }\r\n    }\r\n    async loadPlaylist(url) {\r\n        const assetsStorage = this.settings.assetsStorage;\r\n        let xhr;\r\n        if (assetsStorage !== undefined) {\r\n            let masterSwarmId;\r\n            masterSwarmId = this.getMasterSwarmId();\r\n            if (masterSwarmId === undefined) {\r\n                masterSwarmId = url.split(\"?\")[0];\r\n            }\r\n            const asset = await assetsStorage.getAsset(url, undefined, masterSwarmId);\r\n            if (asset !== undefined) {\r\n                xhr = {\r\n                    responseURL: asset.responseUri,\r\n                    response: asset.data,\r\n                };\r\n            }\r\n            else {\r\n                const fetch = await this.loadContent(url);\r\n                xhr = {\r\n                    responseURL: fetch.url,\r\n                    response: await fetch.text(),\r\n                };\r\n                void assetsStorage.storeAsset({\r\n                    masterManifestUri: this.masterPlaylist !== null ? this.masterPlaylist.requestUrl : url,\r\n                    masterSwarmId: masterSwarmId,\r\n                    requestUri: url,\r\n                    responseUri: xhr.responseURL,\r\n                    data: xhr.response,\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            const fetch = await this.loadContent(url);\r\n            xhr = {\r\n                responseURL: fetch.url,\r\n                response: await fetch.text(),\r\n            };\r\n        }\r\n        this.processPlaylist(url, xhr.response, xhr.responseURL);\r\n        return xhr;\r\n    }\r\n    async loadSegment(url, byteRange) {\r\n        var _a;\r\n        const segmentLocation = this.getSegmentLocation(url, byteRange);\r\n        const byteRangeString = (0, byte_range_1.byteRangeToString)(byteRange);\r\n        if (!segmentLocation) {\r\n            let content;\r\n            // Not a segment from variants; usually can be: init, audio or subtitles segment, encryption key etc.\r\n            const assetsStorage = this.settings.assetsStorage;\r\n            if (assetsStorage !== undefined) {\r\n                let masterManifestUri = (_a = this.masterPlaylist) === null || _a === void 0 ? void 0 : _a.requestUrl;\r\n                let masterSwarmId;\r\n                masterSwarmId = this.getMasterSwarmId();\r\n                if (masterSwarmId === undefined && this.variantPlaylists.size === 1) {\r\n                    const result = this.variantPlaylists.values().next();\r\n                    if (!result.done) {\r\n                        // always true\r\n                        masterSwarmId = result.value.requestUrl.split(\"?\")[0];\r\n                    }\r\n                }\r\n                if (masterManifestUri === undefined && this.variantPlaylists.size === 1) {\r\n                    const result = this.variantPlaylists.values().next();\r\n                    if (!result.done) {\r\n                        // always true\r\n                        masterManifestUri = result.value.requestUrl;\r\n                    }\r\n                }\r\n                if (masterSwarmId !== undefined && masterManifestUri !== undefined) {\r\n                    const asset = await assetsStorage.getAsset(url, byteRangeString, masterSwarmId);\r\n                    if (asset !== undefined) {\r\n                        content = asset.data;\r\n                    }\r\n                    else {\r\n                        const fetch = await this.loadContent(url, byteRangeString);\r\n                        content = await fetch.arrayBuffer();\r\n                        void assetsStorage.storeAsset({\r\n                            masterManifestUri: masterManifestUri,\r\n                            masterSwarmId: masterSwarmId,\r\n                            requestUri: url,\r\n                            requestRange: byteRangeString,\r\n                            responseUri: fetch.url,\r\n                            data: content,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (content === undefined) {\r\n                const fetch = await this.loadContent(url, byteRangeString);\r\n                content = await fetch.arrayBuffer();\r\n            }\r\n            return { content, downloadBandwidth: 0 };\r\n        }\r\n        const segmentSequence = (segmentLocation.playlist.manifest.mediaSequence ? segmentLocation.playlist.manifest.mediaSequence : 0) +\r\n            segmentLocation.segmentIndex;\r\n        if (this.playQueue.length > 0) {\r\n            const previousSegment = this.playQueue[this.playQueue.length - 1];\r\n            if (previousSegment.segmentSequence !== segmentSequence - 1) {\r\n                // Reset play queue in case of segment loading out of sequence\r\n                this.playQueue = [];\r\n            }\r\n        }\r\n        if (this.segmentRequest) {\r\n            this.segmentRequest.onError(\"Cancel segment request: simultaneous segment requests are not supported\");\r\n        }\r\n        const promise = new Promise((resolve, reject) => {\r\n            this.segmentRequest = new SegmentRequest(url, byteRange, segmentSequence, segmentLocation.playlist.requestUrl, (content, downloadBandwidth) => resolve({ content, downloadBandwidth }), (error) => reject(error));\r\n        });\r\n        this.playQueue.push({ segmentUrl: url, segmentByteRange: byteRange, segmentSequence: segmentSequence });\r\n        void this.loadSegments(segmentLocation.playlist, segmentLocation.segmentIndex, true);\r\n        return promise;\r\n    }\r\n    setPlayingSegment(url, byteRange, start, duration) {\r\n        const urlIndex = this.playQueue.findIndex((segment) => segment.segmentUrl === url && (0, byte_range_1.compareByteRanges)(segment.segmentByteRange, byteRange));\r\n        this.debug(\"Set playing segment to index %d\", urlIndex, this.playQueue);\r\n        if (urlIndex >= 0) {\r\n            this.playQueue = this.playQueue.slice(urlIndex);\r\n            this.playQueue[0].playPosition = { start, duration };\r\n            this.updateSegments();\r\n        }\r\n    }\r\n    setPlayingSegmentByCurrentTime(playheadPosition) {\r\n        if (this.playQueue.length === 0 || !this.playQueue[0].playPosition) {\r\n            return;\r\n        }\r\n        const currentSegmentPosition = this.playQueue[0].playPosition;\r\n        const segmentEndTime = currentSegmentPosition.start + currentSegmentPosition.duration;\r\n        if (segmentEndTime - playheadPosition < 0.2) {\r\n            // means that current segment is (almost) finished playing\r\n            // remove it from queue\r\n            this.playQueue = this.playQueue.slice(1);\r\n            this.updateSegments();\r\n        }\r\n    }\r\n    abortSegment(url, byteRange) {\r\n        if (this.segmentRequest &&\r\n            this.segmentRequest.segmentUrl === url &&\r\n            (0, byte_range_1.compareByteRanges)(this.segmentRequest.segmentByteRange, byteRange)) {\r\n            this.segmentRequest.onSuccess(undefined, 0);\r\n            this.segmentRequest = null;\r\n        }\r\n    }\r\n    abortCurrentSegment() {\r\n        if (!this.segmentRequest)\r\n            return;\r\n        this.segmentRequest.onSuccess(undefined, 0);\r\n        this.segmentRequest = null;\r\n    }\r\n    async destroy() {\r\n        if (this.segmentRequest) {\r\n            this.segmentRequest.onError(\"Loading aborted: object destroyed\");\r\n            this.segmentRequest = null;\r\n        }\r\n        this.masterPlaylist = null;\r\n        this.variantPlaylists.clear();\r\n        this.playQueue = [];\r\n        if (this.settings.assetsStorage !== undefined) {\r\n            await this.settings.assetsStorage.destroy();\r\n        }\r\n        await this.loader.destroy();\r\n    }\r\n    updateSegments() {\r\n        if (!this.segmentRequest) {\r\n            return;\r\n        }\r\n        const segmentLocation = this.getSegmentLocation(this.segmentRequest.segmentUrl, this.segmentRequest.segmentByteRange);\r\n        this.debug(\"update segments\", segmentLocation);\r\n        if (segmentLocation) {\r\n            void this.loadSegments(segmentLocation.playlist, segmentLocation.segmentIndex, false);\r\n        }\r\n    }\r\n    getSegmentLocation(url, byteRange) {\r\n        for (const playlist of this.variantPlaylists.values()) {\r\n            const segmentIndex = playlist.getSegmentIndex(url, byteRange);\r\n            if (segmentIndex >= 0) {\r\n                return { playlist: playlist, segmentIndex: segmentIndex };\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    async loadSegments(playlist, segmentIndex, requestFirstSegment) {\r\n        var _a;\r\n        const segments = [];\r\n        const playlistSegments = playlist.manifest.segments;\r\n        const initialSequence = (_a = playlist.manifest.mediaSequence) !== null && _a !== void 0 ? _a : 0;\r\n        let loadSegmentId = null;\r\n        let priority = Math.max(0, this.playQueue.length - 1);\r\n        const masterSwarmId = this.getMasterSwarmId();\r\n        this.debug(\"load segments\", priority, segmentIndex);\r\n        for (let i = segmentIndex; i < playlistSegments.length && segments.length < this.settings.forwardSegmentCount; ++i) {\r\n            const segment = playlist.manifest.segments[i];\r\n            const url = playlist.getSegmentAbsoluteUrl(segment.uri);\r\n            const byteRange = segment.byterange;\r\n            const id = this.getSegmentId(playlist, initialSequence + i);\r\n            segments.push({\r\n                id: id,\r\n                url: url,\r\n                masterSwarmId: masterSwarmId !== undefined ? masterSwarmId : playlist.streamSwarmId,\r\n                masterManifestUri: this.masterPlaylist !== null ? this.masterPlaylist.requestUrl : playlist.requestUrl,\r\n                streamId: playlist.streamId,\r\n                sequence: (initialSequence + i).toString(),\r\n                range: (0, byte_range_1.byteRangeToString)(byteRange),\r\n                priority: priority++,\r\n            });\r\n            if (requestFirstSegment && !loadSegmentId) {\r\n                loadSegmentId = id;\r\n            }\r\n        }\r\n        this.loader.load(segments, playlist.streamSwarmId);\r\n        if (loadSegmentId) {\r\n            const segment = await this.loader.getSegment(loadSegmentId);\r\n            if (segment) {\r\n                // Segment already loaded by loader\r\n                this.onSegmentLoaded(segment);\r\n            }\r\n        }\r\n    }\r\n    getSegmentId(playlist, segmentSequence) {\r\n        return `${playlist.streamSwarmId}+${segmentSequence}`;\r\n    }\r\n    getMasterSwarmId() {\r\n        const settingsSwarmId = this.settings.swarmId && this.settings.swarmId.length !== 0 ? this.settings.swarmId : undefined;\r\n        if (settingsSwarmId !== undefined) {\r\n            return settingsSwarmId;\r\n        }\r\n        return this.masterPlaylist !== null ? this.masterPlaylist.requestUrl.split(\"?\")[0] : undefined;\r\n    }\r\n    getStreamSwarmId(playlistUrl) {\r\n        const masterSwarmId = this.getMasterSwarmId();\r\n        if (this.masterPlaylist && this.masterPlaylist.manifest.playlists && masterSwarmId) {\r\n            for (let i = 0; i < this.masterPlaylist.manifest.playlists.length; ++i) {\r\n                const url = new URL(this.masterPlaylist.manifest.playlists[i].uri, this.masterPlaylist.responseUrl).toString();\r\n                if (url === playlistUrl) {\r\n                    return { streamSwarmId: `${masterSwarmId}+V${i}`, found: true, index: i };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            streamSwarmId: masterSwarmId !== null && masterSwarmId !== void 0 ? masterSwarmId : playlistUrl.split(\"?\")[0],\r\n            found: false,\r\n            index: -1,\r\n        };\r\n    }\r\n    async loadContent(url, range) {\r\n        const headers = new Headers();\r\n        if (range) {\r\n            headers.append('Range', range);\r\n        }\r\n        return this.fetch(url, { headers });\r\n    }\r\n}\r\nexports.SegmentManager = SegmentManager;\r\nclass Playlist {\r\n    constructor(requestUrl, responseUrl, manifest) {\r\n        this.requestUrl = requestUrl;\r\n        this.responseUrl = responseUrl;\r\n        this.manifest = manifest;\r\n        this.streamSwarmId = \"\";\r\n    }\r\n    getSegmentIndex(url, byteRange) {\r\n        for (let i = 0; i < this.manifest.segments.length; ++i) {\r\n            const segment = this.manifest.segments[i];\r\n            const segmentUrl = this.getSegmentAbsoluteUrl(segment.uri);\r\n            if (url === segmentUrl && (0, byte_range_1.compareByteRanges)(segment.byterange, byteRange)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    getSegmentAbsoluteUrl(segmentUrl) {\r\n        return new URL(segmentUrl, this.responseUrl).toString();\r\n    }\r\n}\r\nclass SegmentRequest {\r\n    constructor(segmentUrl, segmentByteRange, segmentSequence, playlistRequestUrl, onSuccess, onError) {\r\n        this.segmentUrl = segmentUrl;\r\n        this.segmentByteRange = segmentByteRange;\r\n        this.segmentSequence = segmentSequence;\r\n        this.playlistRequestUrl = playlistRequestUrl;\r\n        this.onSuccess = onSuccess;\r\n        this.onError = onError;\r\n    }\r\n}\r\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}"],"names":["window","atob","s","Buffer","from","toString","decodeB64ToUint8Array","b64Text","decodedString","array","Uint8Array","length","i","charCodeAt","Stream","listeners","_proto","prototype","on","type","listener","push","off","index","indexOf","slice","splice","trigger","callbacks","arguments","call","args","Array","_length","_i","apply","dispose","pipe","destination","data","default","_inheritsLoose","_extends","_assertThisInitialized","LineStream","_Stream","_this","buffer","nextNewline","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","parseInt","offset","attributeSeparator","key","value","keyvalue","RegExp","parseAttributes","attributes","attrs","split","attr","replace","ParseStream","customParsers","tagMappers","line","_this2","event","trim","uri","newLines","reduce","acc","mapper","mappedLine","concat","forEach","newLine","text","tagType","duration","parseFloat","title","version","number","playlistType","allowed","test","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","hasOwnProperty","subkey","addParser","_ref","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","map","mapFn","camelCase","str","a","toUpperCase","camelCaseKeys","Object","keys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","self","uris","currentUri","currentMap","_key","hasParts","noop","defaultMediaGroups","widevineUuid","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","streamInf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","programDateTime","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","part","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","preloadHint","hint","isPart","otherHint","renditionReport","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","end","options","__importDefault","mod","__esModule","defineProperty","exports","BandwidthApproximator","debug_1","require","debug","SMOOTH_INTERVAL","MEASURE_INTERVAL","NumberWithTime","timeStamp","lastBytes","currentBytesSum","lastBandwidth","addBytes","bytes","shift","interval","Math","min","getBandwidth","maxBandwidth","bandwidth","getSmoothInterval","getMeasureInterval","HttpMediaManager","stringly_typed_event_emitter_1","FilteredEmitter","STEEmitter","settings","fetchRequests","Map","failedSegments","fetch","download","downloadedPieces","isDownloading","cleanTimedOutFailedSegments","emit","segmentUrl","priority","skipSegmentBuilderPriority","url","buildSegmentUrl","requestUrl","fetchAbort","AbortController","signal","headers","Headers","range","append","undefined","httpUseRanges","bytesDownloaded","piece","byteLength","fetchRequest","setupFetchEvents","catch","err","name","netError","Error","segmentFailure","fetchError","set","id","initialPriority","updatePriority","request","get","requiredSegmentsPriority","abort","delete","has","isFailed","time","now","getActiveDownloads","getActiveDownloadsCount","size","destroy","clear","fetchResponse","dataReader","body","getReader","contentLengthStr","contentLength","Number","dataBytes","nextChunkPos","isArray","status","pieceBytes","read","done","chunkBytes","segmentDownloadFinished","responseUrl","segmentValidator","assign","error","httpFailedSegmentTimeout","candidates","performance","localTransport","segmentUrlBuilder","HybridLoader","events_1","simple_peer_1","loader_interface_1","http_media_manager_1","p2p_media_manager_1","media_peer_1","bandwidth_approximator_1","segments_memory_storage_1","defaultSettings","cachedSegmentExpiration","cachedSegmentsCount","useP2P","consumeOnly","simultaneousHttpDownloads","httpDownloadProbability","httpDownloadProbabilityInterval","httpDownloadProbabilitySkipIfNoPeers","httpDownloadMaxPriority","httpDownloadInitialTimeout","httpDownloadInitialTimeoutPerSegment","simultaneousP2PDownloads","p2pDownloadMaxPriority","p2pSegmentDownloadTimeout","webRtcMaxMessageSize","trackerAnnounce","peerRequestsPerAnnounce","rtcConfig","config","debugSegments","segmentsQueue","bandwidthApproximator","httpDownloadInitialTimeoutTimestamp","Infinity","createHttpManager","createP2PManager","P2PMediaManager","segmentsStorage","load","streamSwarmId","initRandomDownloadIntervalIfNeeded","masterSwarmId","p2pManager","setStreamSwarmId","updateSegmentsMap","abortUnknownSegments","enabled","find","f","storageSegments","getSegmentsMap","processSegmentsQueue","cleanSegmentsStorage","sendSegmentsMapToAll","createSegmentsMap","getSegment","getSettings","getDetails","peerId","getPeerId","getBandwidthEstimate","httpRandomDownloadInterval","clearInterval","httpManager","processInitialSegmentTimeout","setTimeout","currentPriority","segmentsMap","httpAllowed","firstNotDownloadePriority","httpTimeout","scheduleNewProcessQueue","tryHTTP","segmentToAbort","getOverallSegmentsMap","MediaPeerSegmentStatus","Loaded","downloadRandomSegmentOverHttp","getPeers","pendingQueue","filter","random","floor","onSegmentStartLoad","Events","SegmentStartLoad","onPieceBytesDownloaded","PieceBytesDownloaded","onPieceBytesUploaded","PieceBytesUploaded","onSegmentLoaded","downloadBandwidth","storeSegment","SegmentLoaded","onSegmentError","details","SegmentError","onSegmentSize","SegmentSize","getStreamSwarmId","streamId","addSegmentToMap","segmentId","sequence","segmentsIdsAndStatuses","segmentsStatuses","storageSegment","values","LoadingByHttp","onPeerConnect","peer","PeerConnect","sendSegmentsMap","onPeerClose","PeerClose","onTrackerUpdate","incomplete","clean","queueSegment","setInterval","SegmentAbort","bufferedSegmentsCount","SegmentsMemoryStorage","EventEmitter","isSupported","RTCPeerConnection","createDataChannel","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","__exportStar","p","MediaPeer","buffer_1","MediaPeerCommands","DownloadingSegment","pieces","remoteAddress","downloadingSegmentId","downloadingSegment","timer","terminateSegmentRequest","onPeerError","receiveSegmentPiece","segmentData","getJsonCommand","JSON","parse","TextDecoder","decode","_a","onPeerData","command","c","SegmentsMap","SegmentRequest","SegmentData","cancelResponseTimeoutTimer","SegmentAbsent","CancelSegmentRequest","swarmData","segmentsIds","segmentStatus","sendCommand","write","stringify","getDownloadingSegmentId","sendSegmentData","bytesLeft","bytesToSend","sendSegmentAbsent","requestSegment","runResponseTimeoutTimer","cancelSegmentRequest","clearTimeout","client_1","sha1_1","index_1","PEER_PROTOCOL_VERSION","PEER_ID_VERSION_STRING","v","PEER_ID_VERSION_PREFIX","PeerSegmentRequest","generatePeerId","PEER_ID_SYMBOLS","PEER_ID_LENGTH","charAt","TextEncoder","encode","trackerClient","peers","peerCandidates","peerSegmentRequests","pendingTrackerClient","isDestroyed","infoHash","update","digest","createClient","clientOptions","announce","port","getAnnounceOpts","numwant","oldTrackerClient","onTrackerError","onTrackerWarning","onTrackerPeer","warning","trackerPeer","onPeerDataUpdated","onSegmentRequest","onSegmentAbsent","onSegmentTimeout","peerCandidatesById","peerSegmentRequest","swarmChange","stop","removeAllListeners","peerCandidateById","peerCandidate","overallSegmentsMap","connectedPeer","description","ArrayBuffer","cache","lastAccessed","cacheItem","hasSegment","lockedSegmentsFilter","segmentsToDelete","remainingSegments","cachedSegment","countOverhead","sort","b","byteRangeToString","compareByteRanges","getByteRange","context","rangeEnd","rangeStart","b1","b2","byteRange","Engine","p2p_media_loader_core_basyton_1","segment_manager_1","hlsjs_loader_1","loader","segmentManager","SegmentManager","eventKey","engine","impl","getResponseHeader","HlsJsLoader","setLatestLoaderImpl","stats","getEngine","latestLoaderImpl","setPlayingSegment","playheadPosition","setPlayingSegmentByCurrentTime","byte_range_1","loaded","total","aborted","retry","chunkCount","bwEstimate","loading","first","parsing","buffering","boundOnSegmentAbort","onSegmentAbort","bind","boundOnUpdateSegmentSize","onUpdateSegmentSize","boundOnUpdateLoaded","onUpdateLoaded","boundOnSegmentStartLoad","debugId","_config","updateStatsToStartLoading","loadPlaylist","successPlaylist","e","frag","loadSegment","content","successSegment","cleanup","console","warn","abortSegment","onAbort","xhr","response","onSuccess","responseURL","onProgress","onError","isSegment","_type","initJwPlayer","initMediaElementJsPlayer","initVideoJsHlsJsPlugin","initVideoJsContribHlsJsPlayer","initFlowplayerHlsJsPlayer","initClapprPlayer","initHlsJsPlayer","player","initHlsJsEvents","playback","core","getCurrentPlayback","_hls","_p2pm_linitialized","hlsjs","hls","ready","tech_","options_","hlsjsConfig","videojs","Html5Hlsjs","addHook","videojsPlayer","mediaElement","addEventListener","hlsPlayer","currentTime","iid","_event","errorData","htmlMediaElement","el_","abortCurrentRequest","m3u8_parser_1","forwardSegmentCount","swarmId","assetsStorage","loadersettings","masterPlaylist","variantPlaylists","segmentRequest","playQueue","segmentByteRange","parser","Playlist","variantPlaylist","found","updateSegments","getMasterSwarmId","asset","getAsset","responseUri","loadContent","storeAsset","masterManifestUri","requestUri","processPlaylist","segmentLocation","getSegmentLocation","byteRangeString","next","arrayBuffer","requestRange","segmentSequence","previousSegment","promise","Promise","resolve","reject","loadSegments","urlIndex","findIndex","playPosition","currentSegmentPosition","segmentEndTime","getSegmentIndex","requestFirstSegment","playlistSegments","initialSequence","loadSegmentId","max","getSegmentAbsoluteUrl","getSegmentId","settingsSwarmId","playlistUrl","URL","playlistRequestUrl","Hash","blockSize","finalSize","_block","alloc","_finalSize","_blockSize","_len","enc","block","accum","assigned","remainder","_update","rem","fill","bits","writeUInt32BE","lowBits","highBits","hash","_hash","module","inherits","K","W","Sha1","init","_w","_b","_c","_d","_e","rotl1","num","rotl5","rotl30","ft","d","M","readInt32BE","j","t","H","allocUnsafe","writeInt32BE","ReferenceError","target","source","setPrototypeOf","subClass","superClass","constructor","_setPrototypeOf","__proto__"],"sourceRoot":""}